{"version":3,"file":"vis-graph3d.min.js","sources":["../../lib/graph3d/Point3d.js","../../lib/graph3d/Point2d.js","../../lib/graph3d/Slider.js","../../lib/graph3d/StepNumber.js","../../lib/graph3d/Camera.js","../../lib/graph3d/Settings.js","../../lib/graph3d/options.js","../../lib/graph3d/Range.js","../../lib/graph3d/Filter.js","../../lib/graph3d/DataGroup.js","../../lib/graph3d/Graph3d.js"],"sourcesContent":["/**\n * @prototype Point3d\n * @param {number} [x]\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point3d(x, y, z) {\n  this.x = x !== undefined ? x : 0;\n  this.y = y !== undefined ? y : 0;\n  this.z = z !== undefined ? z : 0;\n}\n\n/**\n * Subtract the two provided points, returns a-b\n * @param {Point3d} a\n * @param {Point3d} b\n * @return {Point3d} a-b\n */\nPoint3d.subtract = function(a, b) {\n  var sub = new Point3d();\n  sub.x = a.x - b.x;\n  sub.y = a.y - b.y;\n  sub.z = a.z - b.z;\n  return sub;\n};\n\n/**\n * Add the two provided points, returns a+b\n * @param {Point3d} a\n * @param {Point3d} b\n * @return {Point3d} a+b\n */\nPoint3d.add = function(a, b) {\n  var sum = new Point3d();\n  sum.x = a.x + b.x;\n  sum.y = a.y + b.y;\n  sum.z = a.z + b.z;\n  return sum;\n};\n\n/**\n * Calculate the average of two 3d points\n * @param {Point3d} a\n * @param {Point3d} b\n * @return {Point3d} The average, (a+b)/2\n */\nPoint3d.avg = function(a, b) {\n  return new Point3d(\n          (a.x + b.x) / 2,\n          (a.y + b.y) / 2,\n          (a.z + b.z) / 2\n  );\n};\n\n/**\n * Scale the provided point by a scalar, returns p*c\n * @param {Point3d} p\n * @param {number} c\n * @return {Point3d} p*c\n */\nPoint3d.scalarProduct = function(p, c) {\n  return new Point3d(p.x * c, p.y * c, p.z * c);\n};\n\n/**\n * Calculate the dot product of the two provided points, returns a.b\n * Documentation: http://en.wikipedia.org/wiki/Dot_product\n * @param {Point3d} a\n * @param {Point3d} b\n * @return {Point3d} dot product a.b\n */\nPoint3d.dotProduct = function(a, b) {\n  return a.x * b.x + a.y * b.y + a.z * b.z;\n};\n\n/**\n * Calculate the cross product of the two provided points, returns axb\n * Documentation: http://en.wikipedia.org/wiki/Cross_product\n * @param {Point3d} a\n * @param {Point3d} b\n * @return {Point3d} cross product axb\n */\nPoint3d.crossProduct = function(a, b) {\n  var crossproduct = new Point3d();\n\n  crossproduct.x = a.y * b.z - a.z * b.y;\n  crossproduct.y = a.z * b.x - a.x * b.z;\n  crossproduct.z = a.x * b.y - a.y * b.x;\n\n  return crossproduct;\n};\n\n\n/**\n * Retrieve the length of the vector (or the distance from this point to the origin\n * @return {number}  length\n */\nPoint3d.prototype.length = function() {\n  return Math.sqrt(\n          this.x * this.x +\n          this.y * this.y +\n          this.z * this.z\n  );\n};\n\n\n/**\n * Return a normalized vector pointing in the same direction.\n * @return {Point3d}  normalized\n */\nPoint3d.prototype.normalize = function() {\n  return Point3d.scalarProduct(this, 1/this.length());\n};\n\n\nmodule.exports = Point3d;\n","/**\n * @prototype Point2d\n * @param {number} [x]\n * @param {number} [y]\n */\nfunction Point2d (x, y) {\n  this.x = x !== undefined ? x : 0;\n  this.y = y !== undefined ? y : 0;\n}\n\nmodule.exports = Point2d;\n","import * as util from \"vis-util/esnext\";\n\n/**\n * An html slider control with start/stop/prev/next buttons\n *\n * @constructor Slider\n * @param {Element} container  The element where the slider will be created\n * @param {Object} options   Available options:\n *                 {boolean} visible   If true (default) the\n *                           slider is visible.\n */\nfunction Slider(container, options) {\n  if (container === undefined) {\n    throw new Error('No container element defined');\n  }\n  this.container = container;\n  this.visible = (options && options.visible != undefined) ? options.visible : true;\n\n  if (this.visible) {\n    this.frame = document.createElement('DIV');\n    //this.frame.style.backgroundColor = '#E5E5E5';\n    this.frame.style.width = '100%';\n    this.frame.style.position = 'relative';\n    this.container.appendChild(this.frame);\n\n    this.frame.prev = document.createElement('INPUT');\n    this.frame.prev.type = 'BUTTON';\n    this.frame.prev.value = 'Prev';\n    this.frame.appendChild(this.frame.prev);\n\n    this.frame.play = document.createElement('INPUT');\n    this.frame.play.type = 'BUTTON';\n    this.frame.play.value = 'Play';\n    this.frame.appendChild(this.frame.play);\n\n    this.frame.next = document.createElement('INPUT');\n    this.frame.next.type = 'BUTTON';\n    this.frame.next.value = 'Next';\n    this.frame.appendChild(this.frame.next);\n\n    this.frame.bar = document.createElement('INPUT');\n    this.frame.bar.type = 'BUTTON';\n    this.frame.bar.style.position = 'absolute';\n    this.frame.bar.style.border = '1px solid red';\n    this.frame.bar.style.width = '100px';\n    this.frame.bar.style.height = '6px';\n    this.frame.bar.style.borderRadius = '2px';\n    this.frame.bar.style.MozBorderRadius = '2px';\n    this.frame.bar.style.border = '1px solid #7F7F7F';\n    this.frame.bar.style.backgroundColor = '#E5E5E5';\n    this.frame.appendChild(this.frame.bar);\n\n    this.frame.slide = document.createElement('INPUT');\n    this.frame.slide.type = 'BUTTON';\n    this.frame.slide.style.margin = '0px';\n    this.frame.slide.value = ' ';\n    this.frame.slide.style.position = 'relative';\n    this.frame.slide.style.left = '-100px';\n    this.frame.appendChild(this.frame.slide);\n\n    // create events\n    var me = this;\n    this.frame.slide.onmousedown = function (event) {me._onMouseDown(event);};\n    this.frame.prev.onclick = function (event) {me.prev(event);};\n    this.frame.play.onclick = function (event) {me.togglePlay(event);};\n    this.frame.next.onclick = function (event) {me.next(event);};\n  }\n\n  this.onChangeCallback = undefined;\n\n  this.values = [];\n  this.index = undefined;\n\n  this.playTimeout = undefined;\n  this.playInterval = 1000; // milliseconds\n  this.playLoop = true;\n}\n\n/**\n * Select the previous index\n */\nSlider.prototype.prev = function() {\n  var index = this.getIndex();\n  if (index > 0) {\n    index--;\n    this.setIndex(index);\n  }\n};\n\n/**\n * Select the next index\n */\nSlider.prototype.next = function() {\n  var index = this.getIndex();\n  if (index < this.values.length - 1) {\n    index++;\n    this.setIndex(index);\n  }\n};\n\n/**\n * Select the next index\n */\nSlider.prototype.playNext = function() {\n  var start = new Date();\n\n  var index = this.getIndex();\n  if (index < this.values.length - 1) {\n    index++;\n    this.setIndex(index);\n  }\n  else if (this.playLoop) {\n    // jump to the start\n    index = 0;\n    this.setIndex(index);\n  }\n\n  var end = new Date();\n  var diff = (end - start);\n\n  // calculate how much time it to to set the index and to execute the callback\n  // function.\n  var interval = Math.max(this.playInterval - diff, 0);\n  // document.title = diff // TODO: cleanup\n\n  var me = this;\n  this.playTimeout = setTimeout(function() {me.playNext();}, interval);\n};\n\n/**\n * Toggle start or stop playing\n */\nSlider.prototype.togglePlay = function() {\n  if (this.playTimeout === undefined) {\n    this.play();\n  } else {\n    this.stop();\n  }\n};\n\n/**\n * Start playing\n */\nSlider.prototype.play = function() {\n  // Test whether already playing\n  if (this.playTimeout) return;\n\n  this.playNext();\n\n  if (this.frame) {\n    this.frame.play.value = 'Stop';\n  }\n};\n\n/**\n * Stop playing\n */\nSlider.prototype.stop = function() {\n  clearInterval(this.playTimeout);\n  this.playTimeout = undefined;\n\n  if (this.frame) {\n    this.frame.play.value = 'Play';\n  }\n};\n\n/**\n * Set a callback function which will be triggered when the value of the\n * slider bar has changed.\n *\n * @param {function} callback\n */\nSlider.prototype.setOnChangeCallback = function(callback) {\n  this.onChangeCallback = callback;\n};\n\n/**\n * Set the interval for playing the list\n * @param {number} interval   The interval in milliseconds\n */\nSlider.prototype.setPlayInterval = function(interval) {\n  this.playInterval = interval;\n};\n\n/**\n * Retrieve the current play interval\n * @return {number} interval   The interval in milliseconds\n */\nSlider.prototype.getPlayInterval = function() {\n  return this.playInterval;\n};\n\n/**\n * Set looping on or off\n * @param {boolean} doLoop  If true, the slider will jump to the start when\n *               the end is passed, and will jump to the end\n *               when the start is passed.\n *\n */\nSlider.prototype.setPlayLoop = function(doLoop) {\n  this.playLoop = doLoop;\n};\n\n\n/**\n * Execute the onchange callback function\n */\nSlider.prototype.onChange = function() {\n  if (this.onChangeCallback !== undefined) {\n    this.onChangeCallback();\n  }\n};\n\n/**\n * redraw the slider on the correct place\n */\nSlider.prototype.redraw = function() {\n  if (this.frame) {\n    // resize the bar\n    this.frame.bar.style.top = (this.frame.clientHeight/2 -\n        this.frame.bar.offsetHeight/2) + 'px';\n    this.frame.bar.style.width = (this.frame.clientWidth -\n        this.frame.prev.clientWidth -\n        this.frame.play.clientWidth -\n        this.frame.next.clientWidth - 30)  + 'px';\n\n    // position the slider button\n    var left = this.indexToLeft(this.index);\n    this.frame.slide.style.left = (left) + 'px';\n  }\n};\n\n\n/**\n * Set the list with values for the slider\n * @param {Array} values   A javascript array with values (any type)\n */\nSlider.prototype.setValues = function(values) {\n  this.values = values;\n\n  if (this.values.length > 0)\n    this.setIndex(0);\n  else\n    this.index = undefined;\n};\n\n/**\n * Select a value by its index\n * @param {number} index\n */\nSlider.prototype.setIndex = function(index) {\n  if (index < this.values.length) {\n    this.index = index;\n\n    this.redraw();\n    this.onChange();\n  }\n  else {\n    throw new Error('Index out of range');\n  }\n};\n\n/**\n * retrieve the index of the currently selected vaue\n * @return {number} index\n */\nSlider.prototype.getIndex = function() {\n  return this.index;\n};\n\n\n/**\n * retrieve the currently selected value\n * @return {*} value\n */\nSlider.prototype.get = function() {\n  return this.values[this.index];\n};\n\n\nSlider.prototype._onMouseDown = function(event) {\n  // only react on left mouse button down\n  var leftButtonDown = event.which ? (event.which === 1) : (event.button === 1);\n  if (!leftButtonDown) return;\n\n  this.startClientX = event.clientX;\n  this.startSlideX = parseFloat(this.frame.slide.style.left);\n\n  this.frame.style.cursor = 'move';\n\n  // add event listeners to handle moving the contents\n  // we store the function onmousemove and onmouseup in the graph, so we can\n  // remove the eventlisteners lateron in the function mouseUp()\n  var me = this;\n  this.onmousemove = function (event) {me._onMouseMove(event);};\n  this.onmouseup   = function (event) {me._onMouseUp(event);};\n  util.addEventListener(document, 'mousemove', this.onmousemove);\n  util.addEventListener(document, 'mouseup',   this.onmouseup);\n  util.preventDefault(event);\n};\n\n\nSlider.prototype.leftToIndex = function (left) {\n  var width = parseFloat(this.frame.bar.style.width) -\n      this.frame.slide.clientWidth - 10;\n  var x = left - 3;\n\n  var index = Math.round(x / width * (this.values.length-1));\n  if (index < 0) index = 0;\n  if (index > this.values.length-1) index = this.values.length-1;\n\n  return index;\n};\n\nSlider.prototype.indexToLeft = function (index) {\n  var width = parseFloat(this.frame.bar.style.width) -\n      this.frame.slide.clientWidth - 10;\n\n  var x = index / (this.values.length-1) * width;\n  var left = x + 3;\n\n  return left;\n};\n\n\n\nSlider.prototype._onMouseMove = function (event) {\n  var diff = event.clientX - this.startClientX;\n  var x = this.startSlideX + diff;\n\n  var index = this.leftToIndex(x);\n\n  this.setIndex(index);\n\n  util.preventDefault();\n};\n\n\nSlider.prototype._onMouseUp = function (event) {  // eslint-disable-line no-unused-vars\n  this.frame.style.cursor = 'auto';\n\n  // remove event listeners\n  util.removeEventListener(document, 'mousemove', this.onmousemove);\n  util.removeEventListener(document, 'mouseup', this.onmouseup);\n\n  util.preventDefault();\n};\n\nexport default Slider;\n","/**\n * @prototype StepNumber\n * The class StepNumber is an iterator for Numbers. You provide a start and end\n * value, and a best step size. StepNumber itself rounds to fixed values and\n * a finds the step that best fits the provided step.\n *\n * If prettyStep is true, the step size is chosen as close as possible to the\n * provided step, but being a round value like 1, 2, 5, 10, 20, 50, ....\n *\n * Example usage:\n *   var step = new StepNumber(0, 10, 2.5, true);\n *   step.start();\n *   while (!step.end()) {\n *   alert(step.getCurrent());\n *   step.next();\n *   }\n *\n * Version: 1.0\n *\n * @param {number} start     The start value\n * @param {number} end     The end value\n * @param {number} step    Optional. Step size. Must be a positive value.\n * @param {boolean} prettyStep Optional. If true, the step size is rounded\n *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n */\nfunction StepNumber(start, end, step, prettyStep) {\n  // set default values\n  this._start = 0;\n  this._end = 0;\n  this._step = 1;\n  this.prettyStep = true;\n  this.precision = 5;\n\n  this._current = 0;\n  this.setRange(start, end, step, prettyStep);\n}\n\n\n/**\n * Check for input values, to prevent disasters from happening\n *\n * Source: http://stackoverflow.com/a/1830844\n *\n * @param {string} n\n * @returns {boolean}\n */\nStepNumber.prototype.isNumeric = function(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\n\n/**\n * Set a new range: start, end and step.\n *\n * @param {number} start     The start value\n * @param {number} end     The end value\n * @param {number} step    Optional. Step size. Must be a positive value.\n * @param {boolean} prettyStep Optional. If true, the step size is rounded\n *               To a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n */\nStepNumber.prototype.setRange = function(start, end, step, prettyStep) {\n  if (!this.isNumeric(start)) {\n    throw new Error('Parameter \\'start\\' is not numeric; value: ' + start);\n  }\n  if (!this.isNumeric(end)) {\n    throw new Error('Parameter \\'end\\' is not numeric; value: ' + start);\n  }\n  if (!this.isNumeric(step)) {\n    throw new Error('Parameter \\'step\\' is not numeric; value: ' + start);\n  }\n\n  this._start = start ? start : 0;\n  this._end = end ? end : 0;\n\n  this.setStep(step, prettyStep);\n};\n\n/**\n * Set a new step size\n * @param {number} step    New step size. Must be a positive value\n * @param {boolean} prettyStep Optional. If true, the provided step is rounded\n *               to a pretty step size (like 1, 2, 5, 10, 20, 50, ...)\n */\nStepNumber.prototype.setStep = function(step, prettyStep) {\n  if (step === undefined || step <= 0)\n    return;\n\n  if (prettyStep !== undefined)\n    this.prettyStep = prettyStep;\n\n  if (this.prettyStep === true)\n    this._step = StepNumber.calculatePrettyStep(step);\n  else\n    this._step = step;\n};\n\n/**\n * Calculate a nice step size, closest to the desired step size.\n * Returns a value in one of the ranges 1*10^n, 2*10^n, or 5*10^n, where n is an\n * integer Number. For example 1, 2, 5, 10, 20, 50, etc...\n * @param {number}  step  Desired step size\n * @return {number}     Nice step size\n */\nStepNumber.calculatePrettyStep = function (step) {\n  var log10 = function (x) {return Math.log(x) / Math.LN10;};\n\n  // try three steps (multiple of 1, 2, or 5\n  var step1 = Math.pow(10, Math.round(log10(step))),\n      step2 = 2 * Math.pow(10, Math.round(log10(step / 2))),\n      step5 = 5 * Math.pow(10, Math.round(log10(step / 5)));\n\n  // choose the best step (closest to minimum step)\n  var prettyStep = step1;\n  if (Math.abs(step2 - step) <= Math.abs(prettyStep - step)) prettyStep = step2;\n  if (Math.abs(step5 - step) <= Math.abs(prettyStep - step)) prettyStep = step5;\n\n  // for safety\n  if (prettyStep <= 0) {\n    prettyStep = 1;\n  }\n\n  return prettyStep;\n};\n\n/**\n * returns the current value of the step\n * @return {number} current value\n */\nStepNumber.prototype.getCurrent = function () {\n  return parseFloat(this._current.toPrecision(this.precision));\n};\n\n/**\n * returns the current step size\n * @return {number} current step size\n */\nStepNumber.prototype.getStep = function () {\n  return this._step;\n};\n\n/**\n * Set the current to its starting value.\n *\n * By default, this will be the largest value smaller than start, which\n * is a multiple of the step size.\n *\n * Parameters checkFirst is optional, default false.\n * If set to true, move the current value one step if smaller than start.\n *\n * @param {boolean} [checkFirst=false]\n */\nStepNumber.prototype.start = function(checkFirst) {\n  if (checkFirst === undefined) {\n    checkFirst = false;\n  }\n\n  this._current = this._start - this._start % this._step;\n\n  if (checkFirst) {\n    if (this.getCurrent() < this._start) {\n      this.next();\n    }\n  }\n};\n\n\n/**\n * Do a step, add the step size to the current value\n */\nStepNumber.prototype.next = function () {\n  this._current += this._step;\n};\n\n/**\n * Returns true whether the end is reached\n * @return {boolean}  True if the current value has passed the end value.\n */\nStepNumber.prototype.end = function () {\n  return (this._current > this._end);\n};\n\nmodule.exports = StepNumber;\n","import Point3d from \"./Point3d\";\n\n/**\n * The camera is mounted on a (virtual) camera arm. The camera arm can rotate\n * The camera is always looking in the direction of the origin of the arm.\n * This way, the camera always rotates around one fixed point, the location\n * of the camera arm.\n *\n * Documentation:\n *   http://en.wikipedia.org/wiki/3D_projection\n * @class Camera\n */\nfunction Camera() {\n  this.armLocation = new Point3d();\n  this.armRotation = {};\n  this.armRotation.horizontal = 0;\n  this.armRotation.vertical = 0;\n  this.armLength = 1.7;\n  this.cameraOffset = new Point3d();\n  this.offsetMultiplier = 0.6;\n\n  this.cameraLocation = new Point3d();\n  this.cameraRotation =  new Point3d(0.5*Math.PI, 0, 0);\n\n  this.calculateCameraOrientation();\n}\n\n/**\n * Set offset camera in camera coordinates\n * @param {number} x offset by camera horisontal\n * @param {number} y offset by camera vertical\n */\nCamera.prototype.setOffset = function(x, y) {\n  var abs = Math.abs,\n      sign = Math.sign,\n      mul = this.offsetMultiplier,\n      border = this.armLength * mul;\n\n  if (abs(x) > border) {\n      x = sign(x) * border;\n  }\n  if (abs(y) > border) {\n      y = sign(y) * border;\n  }\n  this.cameraOffset.x = x;\n  this.cameraOffset.y = y;\n  this.calculateCameraOrientation();\n};\n\n\n/**\n * Get camera offset by horizontal and vertical\n * @returns {number}\n */\nCamera.prototype.getOffset = function() {\n  return this.cameraOffset;\n};\n\n/**\n * Set the location (origin) of the arm\n * @param {number} x  Normalized value of x\n * @param {number} y  Normalized value of y\n * @param {number} z  Normalized value of z\n */\nCamera.prototype.setArmLocation = function(x, y, z) {\n  this.armLocation.x = x;\n  this.armLocation.y = y;\n  this.armLocation.z = z;\n\n  this.calculateCameraOrientation();\n};\n\n/**\n * Set the rotation of the camera arm\n * @param {number} horizontal   The horizontal rotation, between 0 and 2*PI.\n *                Optional, can be left undefined.\n * @param {number} vertical   The vertical rotation, between 0 and 0.5*PI\n *                if vertical=0.5*PI, the graph is shown from the\n *                top. Optional, can be left undefined.\n */\nCamera.prototype.setArmRotation = function(horizontal, vertical) {\n  if (horizontal !== undefined) {\n    this.armRotation.horizontal = horizontal;\n  }\n\n  if (vertical !== undefined) {\n    this.armRotation.vertical = vertical;\n    if (this.armRotation.vertical < 0) this.armRotation.vertical = 0;\n    if (this.armRotation.vertical > 0.5*Math.PI) this.armRotation.vertical = 0.5*Math.PI;\n  }\n\n  if (horizontal !== undefined || vertical !== undefined) {\n    this.calculateCameraOrientation();\n  }\n};\n\n/**\n * Retrieve the current arm rotation\n * @return {object}   An object with parameters horizontal and vertical\n */\nCamera.prototype.getArmRotation = function() {\n  var rot = {};\n  rot.horizontal = this.armRotation.horizontal;\n  rot.vertical = this.armRotation.vertical;\n\n  return rot;\n};\n\n/**\n * Set the (normalized) length of the camera arm.\n * @param {number} length A length between 0.71 and 5.0\n */\nCamera.prototype.setArmLength = function(length) {\n  if (length === undefined)\n    return;\n\n  this.armLength = length;\n\n  // Radius must be larger than the corner of the graph,\n  // which has a distance of sqrt(0.5^2+0.5^2) = 0.71 from the center of the\n  // graph\n  if (this.armLength < 0.71) this.armLength = 0.71;\n  if (this.armLength > 5.0) this.armLength = 5.0;\n\n  this.setOffset(this.cameraOffset.x, this.cameraOffset.y);\n  this.calculateCameraOrientation();\n};\n\n/**\n * Retrieve the arm length\n * @return {number} length\n */\nCamera.prototype.getArmLength = function() {\n  return this.armLength;\n};\n\n/**\n * Retrieve the camera location\n * @return {Point3d} cameraLocation\n */\nCamera.prototype.getCameraLocation = function() {\n  return this.cameraLocation;\n};\n\n/**\n * Retrieve the camera rotation\n * @return {Point3d} cameraRotation\n */\nCamera.prototype.getCameraRotation = function() {\n  return this.cameraRotation;\n};\n\n/**\n * Calculate the location and rotation of the camera based on the\n * position and orientation of the camera arm\n */\nCamera.prototype.calculateCameraOrientation = function() {\n  // calculate location of the camera\n  this.cameraLocation.x = this.armLocation.x - this.armLength * Math.sin(this.armRotation.horizontal) * Math.cos(this.armRotation.vertical);\n  this.cameraLocation.y = this.armLocation.y - this.armLength * Math.cos(this.armRotation.horizontal) * Math.cos(this.armRotation.vertical);\n  this.cameraLocation.z = this.armLocation.z + this.armLength * Math.sin(this.armRotation.vertical);\n\n  // calculate rotation of the camera\n  this.cameraRotation.x = Math.PI/2 - this.armRotation.vertical;\n  this.cameraRotation.y = 0;\n  this.cameraRotation.z = -this.armRotation.horizontal;\n\n  var xa = this.cameraRotation.x;\n  var za = this.cameraRotation.z;\n  var dx = this.cameraOffset.x;\n  var dy = this.cameraOffset.y;\n  var sin = Math.sin, cos = Math.cos;\n\n  this.cameraLocation.x = this.cameraLocation.x + dx * cos(za) + dy * - sin(za) * cos(xa);\n  this.cameraLocation.y = this.cameraLocation.y + dx * sin(za) + dy * cos(za) * cos(xa);\n  this.cameraLocation.z = this.cameraLocation.z + dy * sin(xa);\n};\n\nexport default Camera;\n","////////////////////////////////////////////////////////////////////////////////\n// This modules handles the options for Graph3d.\n//\n////////////////////////////////////////////////////////////////////////////////\nimport * as util from \"vis-util/esnext\";\nimport Camera from \"./Camera\";\nimport Point3d from \"./Point3d\";\n\n\n// enumerate the available styles\nvar STYLE = {\n  BAR     : 0,\n  BARCOLOR: 1,\n  BARSIZE : 2,\n  DOT     : 3,\n  DOTLINE : 4,\n  DOTCOLOR: 5,\n  DOTSIZE : 6,\n  GRID    : 7,\n  LINE    : 8,\n  SURFACE : 9\n};\n\n\n// The string representations of the styles\nvar STYLENAME = {\n  'dot'      : STYLE.DOT,\n  'dot-line' : STYLE.DOTLINE,\n  'dot-color': STYLE.DOTCOLOR,\n  'dot-size' : STYLE.DOTSIZE,\n  'line'     : STYLE.LINE,\n  'grid'     : STYLE.GRID,\n  'surface'  : STYLE.SURFACE,\n  'bar'      : STYLE.BAR,\n  'bar-color': STYLE.BARCOLOR,\n  'bar-size' : STYLE.BARSIZE\n};\n\n\n/**\n * Field names in the options hash which are of relevance to the user.\n *\n * Specifically, these are the fields which require no special handling,\n * and can be directly copied over.\n */\nvar OPTIONKEYS = [\n  'width',\n  'height',\n  'filterLabel',\n  'legendLabel',\n  'xLabel',\n  'yLabel',\n  'zLabel',\n  'xValueLabel',\n  'yValueLabel',\n  'zValueLabel',\n  'showXAxis',\n  'showYAxis',\n  'showZAxis',\n  'showGrayBottom',\n  'showGrid',\n  'showPerspective',\n  'showShadow',\n  'showSurfaceGrid',\n  'keepAspectRatio',\n  'rotateAxisLabels',\n  'verticalRatio',\n  'dotSizeRatio',\n  'dotSizeMinFraction',\n  'dotSizeMaxFraction',\n  'showAnimationControls',\n  'animationInterval',\n  'animationPreload',\n  'animationAutoStart',\n  'axisColor',\n  'axisFontSize',\n  'axisFontType',\n  'gridColor',\n  'xCenter',\n  'yCenter',\n  'zoomable',\n  'tooltipDelay',\n  'ctrlToZoom'\n];\n\n\n/**\n * Field names in the options hash which are of relevance to the user.\n *\n * Same as OPTIONKEYS, but internally these fields are stored with \n * prefix 'default' in the name.\n */\nvar PREFIXEDOPTIONKEYS = [\n  'xBarWidth',\n  'yBarWidth',\n  'valueMin',\n  'valueMax',\n  'xMin',\n  'xMax',\n  'xStep',\n  'yMin',\n  'yMax',\n  'yStep',\n  'zMin',\n  'zMax',\n  'zStep'\n];\n\n\n// Placeholder for DEFAULTS reference\nvar DEFAULTS = undefined; \n\n\n/**\n * Check if given hash is empty.\n *\n * Source: http://stackoverflow.com/a/679937\n *\n * @param {object} obj\n * @returns {boolean}\n */\nfunction isEmpty(obj) {\n  for(var prop in obj) {\n    if (obj.hasOwnProperty(prop))\n      return false;\n  }\n\n  return true;\n}\n\n\n/**\n * Make first letter of parameter upper case.\n *\n * Source: http://stackoverflow.com/a/1026087\n *\n * @param {string} str\n * @returns {string}\n */\nfunction capitalize(str) {\n  if (str === undefined || str === \"\" || typeof str != \"string\") {\n    return str;\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n/**\n * Add a prefix to a field name, taking style guide into account\n *\n * @param {string} prefix\n * @param {string} fieldName\n * @returns {string}\n */\nfunction prefixFieldName(prefix, fieldName) {\n  if (prefix === undefined || prefix === \"\") {\n    return fieldName;\n  }\n\n  return prefix + capitalize(fieldName);\n}\n\n\n/**\n * Forcibly copy fields from src to dst in a controlled manner.\n *\n * A given field in dst will always be overwitten. If this field\n * is undefined or not present in src, the field in dst will \n * be explicitly set to undefined.\n * \n * The intention here is to be able to reset all option fields.\n * \n * Only the fields mentioned in array 'fields' will be handled.\n *\n * @param {object} src\n * @param {object} dst\n * @param {array<string>} fields array with names of fields to copy\n * @param {string} [prefix] prefix to use for the target fields.\n */\nfunction forceCopy(src, dst, fields, prefix) {\n  var srcKey;\n  var dstKey;\n\n  for (var i = 0; i < fields.length; ++i) {\n    srcKey  = fields[i];\n    dstKey  = prefixFieldName(prefix, srcKey);\n\n    dst[dstKey] = src[srcKey];\n  }\n}\n\n\n/**\n * Copy fields from src to dst in a safe and controlled manner.\n *\n * Only the fields mentioned in array 'fields' will be copied over,\n * and only if these are actually defined.\n *\n * @param {object} src\n * @param {object} dst\n * @param {array<string>} fields array with names of fields to copy\n * @param {string} [prefix] prefix to use for the target fields.\n */\nfunction safeCopy(src, dst, fields, prefix) {\n  var srcKey;\n  var dstKey;\n\n  for (var i = 0; i < fields.length; ++i) {\n    srcKey  = fields[i];\n    if (src[srcKey] === undefined) continue;\n\n    dstKey  = prefixFieldName(prefix, srcKey);\n\n    dst[dstKey] = src[srcKey];\n  }\n}\n\n\n/**\n * Initialize dst with the values in src.\n *\n * src is the hash with the default values. \n * A reference DEFAULTS to this hash is stored locally for \n * further handling.\n *\n * For now, dst is assumed to be a Graph3d instance.\n * @param {object} src\n * @param {object} dst\n */\nfunction setDefaults(src, dst) {\n  if (src === undefined || isEmpty(src)) {\n    throw new Error('No DEFAULTS passed');\n  }\n  if (dst === undefined) {\n    throw new Error('No dst passed');\n  }\n\n  // Remember defaults for future reference\n  DEFAULTS = src;\n\n  // Handle the defaults which can be simply copied over\n  forceCopy(src, dst, OPTIONKEYS);\n  forceCopy(src, dst, PREFIXEDOPTIONKEYS, 'default');\n\n  // Handle the more complex ('special') fields\n  setSpecialSettings(src, dst);\n\n  // Following are internal fields, not part of the user settings\n  dst.margin = 10;                  // px\n  dst.showTooltip = false;\n  dst.onclick_callback = null;\n  dst.eye = new Point3d(0, 0, -1);  // TODO: set eye.z about 3/4 of the width of the window?\n}\n\n/**\n *\n * @param {object} options\n * @param {object} dst\n */\nfunction setOptions(options, dst) {\n  if (options === undefined) {\n    return;\n  }\n  if (dst === undefined) {\n    throw new Error('No dst passed');\n  }\n\n  if (DEFAULTS === undefined || isEmpty(DEFAULTS)) {\n    throw new Error('DEFAULTS not set for module Settings');\n  }\n\n  // Handle the parameters which can be simply copied over\n  safeCopy(options, dst, OPTIONKEYS);\n  safeCopy(options, dst, PREFIXEDOPTIONKEYS, 'default');\n\n  // Handle the more complex ('special') fields\n  setSpecialSettings(options, dst);\n}\n\n/**\n * Special handling for certain parameters\n *\n * 'Special' here means: setting requires more than a simple copy\n *\n * @param {object} src\n * @param {object} dst\n */\nfunction setSpecialSettings(src, dst) {\n  if (src.backgroundColor !== undefined) {\n    setBackgroundColor(src.backgroundColor, dst);\n  }\n\n  setDataColor(src.dataColor, dst);\n  setStyle(src.style, dst);\n  if (src.surfaceColors !== undefined) {\n    console.warn(\n      '`options.surfaceColors` is deprecated and may be removed in a future ' +\n      'version. Please use `options.colormap` instead. Note that the `colormap` ' +\n      'option uses the inverse array ordering (running from vMin to vMax).')\n    if (src.colormap !== undefined) {\n      throw new Error('The `colormap` and `surfaceColors` options are mutually exclusive.');\n    }\n    if (dst.style !== 'surface') {\n      console.warn(\n        'Ignoring `surfaceColors` in graph style `' + dst.style + '` for ' +\n        'backward compatibility (only effective in `surface` plots).');\n    }\n    else {\n      setSurfaceColor(src.surfaceColors, dst);\n    }\n  }\n  else {\n    setColormap(src.colormap, dst);\n  }\n  setShowLegend(src.showLegend, dst);\n  setCameraPosition(src.cameraPosition, dst);\n\n  // As special fields go, this is an easy one; just a translation of the name.\n  // Can't use this.tooltip directly, because that field exists internally\n  if (src.tooltip !== undefined) {\n    dst.showTooltip = src.tooltip;\n  }\n  if (src.onclick != undefined) {\n    dst.onclick_callback = src.onclick;\n    console.warn(\n      \"`options.onclick` is deprecated and may be removed in a future version.\" +\n      \" Please use `Graph3d.on('click', handler)` instead.\");\n  }\n\n  if (src.tooltipStyle !== undefined) {\n    util.selectiveDeepExtend(['tooltipStyle'], dst, src);\n  }\n}\n\n\n/**\n * Set the value of setting 'showLegend'\n *\n * This depends on the value of the style fields, so it must be called\n * after the style field has been initialized.\n *\n * @param {boolean} showLegend\n * @param {object} dst\n */\nfunction setShowLegend(showLegend, dst) {\n  if (showLegend === undefined) {\n    // If the default was auto, make a choice for this field\n    var isAutoByDefault = (DEFAULTS.showLegend === undefined);\n\n    if (isAutoByDefault) {\n      // these styles default to having legends\n      var isLegendGraphStyle = dst.style === STYLE.DOTCOLOR\n                            || dst.style === STYLE.DOTSIZE;\n\n      dst.showLegend = isLegendGraphStyle;\n    } else {\n       // Leave current value as is\n    }\n  } else {\n    dst.showLegend = showLegend;\n  }\n}\n\n\n/**\n * Retrieve the style index from given styleName\n * @param {string} styleName  Style name such as 'dot', 'grid', 'dot-line'\n * @return {number} styleNumber Enumeration value representing the style, or -1\n *                when not found\n */\nfunction getStyleNumberByName(styleName) {\n  var number = STYLENAME[styleName];\n\n  if (number === undefined) {\n    return -1;\n  }\n\n  return number;\n}\n\n\n/**\n * Check if given number is a valid style number.\n *\n * @param {string | number} style\n * @return {boolean} true if valid, false otherwise\n */\nfunction checkStyleNumber(style) {\n  var valid = false;\n\n  for (var n in STYLE) {\n    if (STYLE[n] === style) {\n      valid = true;\n      break;\n    }\n  }\n\n  return valid;\n}\n\n/**\n *\n * @param {string | number} style\n * @param {Object} dst\n */\nfunction setStyle(style, dst) {\n  if (style === undefined) {\n    return;   // Nothing to do\n  }\n\n  var styleNumber;\n\n  if (typeof style === 'string') {\n    styleNumber = getStyleNumberByName(style);\n\n    if (styleNumber === -1 ) {\n      throw new Error('Style \\'' + style + '\\' is invalid');\n    }\n  } else {\n    // Do a pedantic check on style number value\n    if (!checkStyleNumber(style)) {\n      throw new Error('Style \\'' + style + '\\' is invalid');\n    }\n\n    styleNumber = style;\n  }\n\n  dst.style = styleNumber;\n}\n\n\n/**\n * Set the background styling for the graph\n * @param {string | {fill: string, stroke: string, strokeWidth: string}} backgroundColor\n * @param {Object} dst\n */\nfunction setBackgroundColor(backgroundColor, dst) {\n  var fill = 'white';\n  var stroke = 'gray';\n  var strokeWidth = 1;\n\n  if (typeof(backgroundColor) === 'string') {\n    fill = backgroundColor;\n    stroke = 'none';\n    strokeWidth = 0;\n  }\n  else if (typeof(backgroundColor) === 'object') {\n    if (backgroundColor.fill !== undefined)    fill = backgroundColor.fill;\n    if (backgroundColor.stroke !== undefined)    stroke = backgroundColor.stroke;\n    if (backgroundColor.strokeWidth !== undefined) strokeWidth = backgroundColor.strokeWidth;\n  }\n  else {\n    throw new Error('Unsupported type of backgroundColor');\n  }\n\n  dst.frame.style.backgroundColor = fill;\n  dst.frame.style.borderColor = stroke;\n  dst.frame.style.borderWidth = strokeWidth + 'px';\n  dst.frame.style.borderStyle = 'solid';\n}\n\n/**\n *\n * @param {string | Object} dataColor\n * @param {Object} dst\n */\nfunction setDataColor(dataColor, dst) {\n  if (dataColor === undefined) {\n    return;    // Nothing to do\n  }\n\n  if (dst.dataColor === undefined) {\n    dst.dataColor = {};\n  }\n\n  if (typeof dataColor === 'string') {\n    dst.dataColor.fill   = dataColor;\n    dst.dataColor.stroke = dataColor;\n  }\n  else {\n    if (dataColor.fill) {\n      dst.dataColor.fill = dataColor.fill;\n    }\n    if (dataColor.stroke) {\n      dst.dataColor.stroke = dataColor.stroke;\n    }\n    if (dataColor.strokeWidth !== undefined) {\n      dst.dataColor.strokeWidth = dataColor.strokeWidth;\n    }\n  }\n}\n\n/**\n * \n * @param {Object | Array<string>} surfaceColors Either an object that describes the HUE, or an array of HTML hex color codes\n * @param {Object} dst \n */\nfunction setSurfaceColor(surfaceColors, dst) {\n  if(surfaceColors === undefined || surfaceColors === true) {\n    return;    // Nothing to do\n  }\n  if (surfaceColors === false) {\n    dst.surfaceColors = undefined;\n    return;\n  }\n\n  if (dst.surfaceColors === undefined) {\n    dst.surfaceColors = {};\n  }\n\n  let rgbColors;\n  if (Array.isArray(surfaceColors)) {\n    rgbColors = parseColorArray(surfaceColors);\n  } else if (typeof surfaceColors === 'object') {\n    rgbColors = parseColorObject(surfaceColors.hue);\n  } else {\n    throw new Error('Unsupported type of surfaceColors');\n  }\n  // for some reason surfaceColors goes from vMax to vMin:\n  rgbColors.reverse();\n  dst.colormap = rgbColors;\n}\n\n\n/**\n *\n * @param {Object | Array<string>} colormap Either an object that describes the HUE, or an array of HTML hex color codes\n * @param {Object} dst\n */\nfunction setColormap(colormap, dst) {\n  if (colormap === undefined) {\n    return;\n  }\n\n  let rgbColors;\n  if (Array.isArray(colormap)) {\n    rgbColors = parseColorArray(colormap);\n  } else if (typeof colormap === 'object') {\n    rgbColors = parseColorObject(colormap.hue);\n  } else if (typeof colormap === 'function') {\n    rgbColors = colormap;\n  } else {\n    throw new Error('Unsupported type of colormap');\n  }\n  dst.colormap = rgbColors;\n}\n\n\n/**\n *\n * @param {Array} colormap\n */\nfunction parseColorArray(colormap) {\n  if(colormap.length < 2) {\n    throw new Error('Colormap array length must be 2 or above.');\n  }\n  return colormap.map(function(colorCode){\n    if(!util.isValidHex(colorCode)) {\n      throw new Error(`Invalid hex color code supplied to colormap.`);\n    }\n    return util.hexToRGB(colorCode);\n  });\n}\n\n\n/**\n * Converts an object to a certain amount of hex color stops. At which point:\n * the HTML hex color codes is converted into an RGB color object.\n *\n * @param {Object} hues\n */\nfunction parseColorObject(hues) {\n  if (hues === undefined) {\n    throw new Error('Unsupported type of colormap');\n  }\n  if (!(hues.saturation >= 0 && hues.saturation <= 100)) {\n    throw new Error('Saturation is out of bounds. Expected range is 0-100.');\n  }\n  if (!(hues.brightness >= 0 && hues.brightness <= 100)) {\n    throw new Error('Brightness is out of bounds. Expected range is 0-100.');\n  }\n  if (!(hues.colorStops >= 2)) {\n    throw new Error('colorStops is out of bounds. Expected 2 or above.');\n  }\n\n  const hueStep = (hues.end - hues.start) / (hues.colorStops - 1);\n\n  let rgbColors = [];\n  for (let i = 0; i < hues.colorStops; ++i) {\n    let hue = (hues.start + hueStep * i) % 360 / 360;\n    rgbColors.push(\n      util.HSVToRGB(\n        hue < 0 ? hue + 1 : hue,\n        hues.saturation/100,\n        hues.brightness/100\n      )\n    );\n  }\n  return rgbColors;\n}\n\n\n/**\n *\n * @param {Object} cameraPosition\n * @param {Object} dst\n */\nfunction setCameraPosition(cameraPosition, dst) {\n  var camPos = cameraPosition;\n  if (camPos === undefined) {\n    return;\n  }\n\n  if (dst.camera === undefined) {\n    dst.camera = new Camera();\n  }\n\n  dst.camera.setArmRotation(camPos.horizontal, camPos.vertical);\n  dst.camera.setArmLength(camPos.distance);\n}\n\n\nexport { STYLE, setCameraPosition, setDefaults, setOptions };\n","/**\n * This object contains all possible options. It will check if the types are correct, if required if the option is one\n * of the allowed values.\n *\n * __any__ means that the name of the property does not matter.\n * __type__ is a required field for all objects and contains the allowed types of all objects\n */\nlet string   = 'string';\nlet bool     = 'boolean';\nlet number   = 'number';\nlet object   = 'object';   // should only be in a __type__ property\nlet array    = 'array';\n// Following not used here, but useful for reference\n//let dom      = 'dom';\n//let any      = 'any';\n\n\nlet colorOptions = {\n  fill       : { string },\n  stroke     : { string },\n  strokeWidth: { number },\n  __type__   : { string, object, 'undefined': 'undefined' }\n};\n\nlet surfaceColorsOptions = {\n  hue: {\n    start       : { number },\n    end         : { number },\n    saturation  : { number },\n    brightness  : { number },\n    colorStops  : { number },\n    __type__    : { object },\n  },\n  __type__    : { boolean: bool, array, object, 'undefined': 'undefined' },\n};\n\nlet colormapOptions = {\n  hue: {\n    start       : { number },\n    end         : { number },\n    saturation  : { number },\n    brightness  : { number },\n    colorStops  : { number },\n    __type__    : { object },\n  },\n  __type__    : { array, object, 'function': 'function', 'undefined': 'undefined' },\n};\n\n/**\n * Order attempted to be alphabetical.\n *   - x/y/z-prefixes ignored in sorting\n *   - __type__ always at end\n *   - globals at end\n */\nlet allOptions = {\n  animationAutoStart: { boolean: bool, 'undefined': 'undefined' },\n  animationInterval : { number },\n  animationPreload  : { boolean: bool },\n  axisColor         : { string },\n  axisFontSize      : { number: number},\n  axisFontType      : { string: string},\n  backgroundColor   : colorOptions,\n  xBarWidth         : { number, 'undefined': 'undefined' },\n  yBarWidth         : { number, 'undefined': 'undefined' },\n  cameraPosition    : {\n    distance  : { number },\n    horizontal: { number },\n    vertical  : { number },\n    __type__  : { object }\n  },\n  zoomable          : { boolean: bool },\n  ctrlToZoom        : { boolean: bool },\n  xCenter           : { string },\n  yCenter           : { string },\n  colormap          : colormapOptions,\n  dataColor         : colorOptions,\n  dotSizeMinFraction: { number },\n  dotSizeMaxFraction: { number },\n  dotSizeRatio      : { number },\n  filterLabel       : { string },\n  gridColor         : { string },\n  onclick           : { 'function': 'function' },\n  keepAspectRatio   : { boolean: bool },\n  xLabel            : { string },\n  yLabel            : { string },\n  zLabel            : { string },\n  legendLabel       : { string },\n  xMin              : { number, 'undefined': 'undefined' },\n  yMin              : { number, 'undefined': 'undefined' },\n  zMin              : { number, 'undefined': 'undefined' },\n  xMax              : { number, 'undefined': 'undefined' },\n  yMax              : { number, 'undefined': 'undefined' },\n  zMax              : { number, 'undefined': 'undefined' },\n  showAnimationControls: { boolean: bool, 'undefined': 'undefined' },\n  showGrayBottom    : { boolean: bool },\n  showGrid          : { boolean: bool },\n  showLegend        : { boolean: bool, 'undefined': 'undefined' },\n  showPerspective   : { boolean: bool },\n  showShadow        : { boolean: bool },\n  showSurfaceGrid   : { boolean: bool },\n  showXAxis         : { boolean: bool },\n  showYAxis         : { boolean: bool },\n  showZAxis         : { boolean: bool },\n  rotateAxisLabels  : { boolean: bool },\n  surfaceColors     : surfaceColorsOptions,\n  xStep             : { number, 'undefined': 'undefined' },\n  yStep             : { number, 'undefined': 'undefined' },\n  zStep             : { number, 'undefined': 'undefined' },\n  style: {\n    number,        // TODO: either Graph3d.DEFAULT has string, or number allowed in documentation\n    string: [\n      'bar',\n      'bar-color',\n      'bar-size',\n      'dot',\n      'dot-line',\n      'dot-color',\n      'dot-size',\n      'line',\n      'grid',\n      'surface'\n    ]\n  },\n  tooltip      : { boolean: bool, 'function': 'function' },\n  tooltipDelay : { number: number },\n  tooltipStyle : {\n    content: {\n      color       : { string },\n      background  : { string },\n      border      : { string },\n      borderRadius: { string },\n      boxShadow   : { string },\n      padding     : { string },\n      __type__    : { object }\n    },\n    line: {\n      borderLeft   : { string },\n      height       : { string },\n      width        : { string },\n      pointerEvents: { string },\n      __type__     : { object }\n    },\n    dot: {\n      border       : { string },\n      borderRadius : { string },\n      height       : { string },\n      width        : { string },\n      pointerEvents: { string },\n      __type__     : { object}\n    },\n     __type__: { object}\n  },\n  xValueLabel   : { 'function': 'function' },\n  yValueLabel   : { 'function': 'function' },\n  zValueLabel   : { 'function': 'function' },\n  valueMax      : { number, 'undefined': 'undefined' },\n  valueMin      : { number, 'undefined': 'undefined' },\n  verticalRatio : { number },\n\n  //globals :\n  height: { string },\n  width: { string },\n  __type__: { object }\n};\n\n\nexport {allOptions};\n","/**\n * @prototype Range\n *\n * Helper class to make working with related min and max values easier.\n *\n * The range is inclusive; a given value is considered part of the range if:\n *\n *    this.min <= value <= this.max\n */\nfunction Range() {\n  this.min = undefined;\n  this.max = undefined;\n}\n\n\n/**\n * Adjust the range so that the passed value fits in it.\n *\n * If the value is outside of the current extremes, adjust\n * the min or max so that the value is within the range.\n *\n * @param {number} value Numeric value to fit in range\n */\nRange.prototype.adjust = function(value) {\n  if (value === undefined) return;\n\n  if (this.min === undefined || this.min > value ) {\n    this.min = value;\n  }\n\n  if (this.max === undefined || this.max < value) {\n    this.max = value;\n  }\n};\n\n\n/**\n * Adjust the current range so that the passed range fits in it.\n *\n * @param {Range} range Range instance to fit in current instance\n */\nRange.prototype.combine = function(range) {\n   this.add(range.min);\n   this.add(range.max);\n};\n\n\n/**\n * Expand the range by the given value\n *\n * min will be lowered by given value;\n * max will be raised by given value\n *\n * Shrinking by passing a negative value is allowed.\n *\n * @param {number} val Amount by which to expand or shrink current range with\n */\nRange.prototype.expand = function(val) {\n  if (val === undefined) {\n    return;\n  }\n\n  var newMin = this.min - val;\n  var newMax = this.max + val;\n\n  // Note that following allows newMin === newMax.\n  // This should be OK, since method expand() allows this also.\n  if (newMin > newMax) {\n    throw new Error('Passed expansion value makes range invalid');\n  }\n\n  this.min = newMin;\n  this.max = newMax;\n};\n\n\n/**\n * Determine the full range width of current instance.\n *\n * @returns {num} The calculated width of this range\n */\nRange.prototype.range = function() {\n  return this.max - this.min;\n};\n\n\n/**\n * Determine the central point of current instance.\n *\n * @returns {number} the value in the middle of min and max\n */\nRange.prototype.center = function() {\n return (this.min + this.max) / 2;\n};\n\n\nmodule.exports = Range;\n","import { DataView } from 'vis-data/esnext';\n\n/**\n * @class Filter\n *\n * @param {DataGroup} dataGroup the data group \n * @param {number}  column             The index of the column to be filtered\n * @param {Graph3d} graph              The graph\n */\nfunction Filter (dataGroup, column, graph) {\n  this.dataGroup = dataGroup;\n  this.column = column;\n  this.graph = graph; // the parent graph\n\n  this.index = undefined;\n  this.value = undefined;\n\n  // read all distinct values and select the first one\n  this.values = dataGroup.getDistinctValues(this.column);\n\n  if (this.values.length > 0) {\n    this.selectValue(0);\n  }\n\n  // create an array with the filtered datapoints. this will be loaded afterwards\n  this.dataPoints = [];\n\n  this.loaded = false;\n  this.onLoadCallback = undefined;\n\n  if (graph.animationPreload) {\n    this.loaded = false;\n    this.loadInBackground();\n  }\n  else {\n    this.loaded = true;\n  }\n}\n\n\n/**\n * Return the label\n * @return {string} label\n */\nFilter.prototype.isLoaded = function() {\n  return this.loaded;\n};\n\n\n/**\n * Return the loaded progress\n * @return {number} percentage between 0 and 100\n */\nFilter.prototype.getLoadedProgress = function() {\n  var len = this.values.length;\n\n  var i = 0;\n  while (this.dataPoints[i]) {\n    i++;\n  }\n\n  return Math.round(i / len * 100);\n};\n\n\n/**\n * Return the label\n * @return {string} label\n */\nFilter.prototype.getLabel = function() {\n  return this.graph.filterLabel;\n};\n\n\n/**\n * Return the columnIndex of the filter\n * @return {number} columnIndex\n */\nFilter.prototype.getColumn = function() {\n  return this.column;\n};\n\n/**\n * Return the currently selected value. Returns undefined if there is no selection\n * @return {*} value\n */\nFilter.prototype.getSelectedValue = function() {\n  if (this.index === undefined)\n    return undefined;\n\n  return this.values[this.index];\n};\n\n/**\n * Retrieve all values of the filter\n * @return {Array} values\n */\nFilter.prototype.getValues = function() {\n  return this.values;\n};\n\n/**\n * Retrieve one value of the filter\n * @param {number}  index\n * @return {*} value\n */\nFilter.prototype.getValue = function(index) {\n  if (index >= this.values.length)\n    throw new Error('Index out of range');\n\n  return this.values[index];\n};\n\n\n/**\n * Retrieve the (filtered) dataPoints for the currently selected filter index\n * @param {number} [index] (optional)\n * @return {Array} dataPoints\n */\nFilter.prototype._getDataPoints = function(index) {\n  if (index === undefined)\n    index = this.index;\n\n  if (index === undefined)\n    return [];\n\n  var dataPoints;\n  if (this.dataPoints[index]) {\n    dataPoints = this.dataPoints[index];\n  }\n  else {\n    var f = {};\n    f.column = this.column;\n    f.value = this.values[index];\n\n    var dataView = new DataView(this.dataGroup.getDataSet(), {filter: function (item) {return (item[f.column] == f.value);}}).get();\n    dataPoints = this.dataGroup._getDataPoints(dataView);\n\n    this.dataPoints[index] = dataPoints;\n  }\n\n  return dataPoints;\n};\n\n\n\n/**\n * Set a callback function when the filter is fully loaded.\n *\n * @param {function} callback\n */\nFilter.prototype.setOnLoadCallback = function(callback) {\n  this.onLoadCallback = callback;\n};\n\n\n/**\n * Add a value to the list with available values for this filter\n * No double entries will be created.\n * @param {number} index\n */\nFilter.prototype.selectValue = function(index) {\n  if (index >= this.values.length)\n    throw new Error('Index out of range');\n\n  this.index = index;\n  this.value = this.values[index];\n};\n\n/**\n * Load all filtered rows in the background one by one\n * Start this method without providing an index!\n *\n * @param {number} [index=0]\n */\nFilter.prototype.loadInBackground = function(index) {\n  if (index === undefined)\n    index = 0;\n\n  var frame = this.graph.frame;\n\n  if (index < this.values.length) {\n    // create a progress box\n    if (frame.progress === undefined) {\n      frame.progress = document.createElement('DIV');\n      frame.progress.style.position = 'absolute';\n      frame.progress.style.color = 'gray';\n      frame.appendChild(frame.progress);\n    }\n    var progress = this.getLoadedProgress();\n    frame.progress.innerHTML = 'Loading animation... ' + progress + '%';\n    // TODO: this is no nice solution...\n    frame.progress.style.bottom = 60 + 'px'; // TODO: use height of slider\n    frame.progress.style.left = 10 + 'px';\n\n    var me = this;\n    setTimeout(function() {me.loadInBackground(index+1);}, 10);\n    this.loaded = false;\n  }\n  else {\n    this.loaded = true;\n\n    // remove the progress box\n    if (frame.progress !== undefined) {\n      frame.removeChild(frame.progress);\n      frame.progress = undefined;\n    }\n\n    if (this.onLoadCallback)\n      this.onLoadCallback();\n  }\n};\n\nexport default Filter;\n","import { DataSet } from \"vis-data/esnext\";\nimport { DataView } from \"vis-data/esnext\";\nimport Range from \"./Range\";\nimport Filter from \"./Filter\";\nimport { STYLE } from \"./Settings\";\nimport Point3d from \"./Point3d\";\n\n\n/**\n * Creates a container for all data of one specific 3D-graph.\n *\n * On construction, the container is totally empty; the data\n * needs to be initialized with method initializeData().\n * Failure to do so will result in the following exception begin thrown\n * on instantiation of Graph3D:\n *\n *     Error: Array, DataSet, or DataView expected\n *\n * @constructor DataGroup\n */\nfunction DataGroup() {\n  this.dataTable = null;  // The original data table\n}\n\n\n/**\n * Initializes the instance from the passed data.\n *\n * Calculates minimum and maximum values and column index values.\n *\n * The graph3d instance is used internally to access the settings for\n * the given instance.\n * TODO: Pass settings only instead.\n *\n * @param {vis.Graph3d}  graph3d Reference to the calling Graph3D instance.\n * @param {Array | DataSet | DataView} rawData The data containing the items for\n *                                             the Graph.\n * @param {number}   style   Style Number\n * @returns {Array.<Object>}\n */\nDataGroup.prototype.initializeData = function(graph3d, rawData, style) {\n  if (rawData === undefined) return;\n\n  if (Array.isArray(rawData)) {\n    rawData = new DataSet(rawData);\n  }\n\n  var data;\n  if (rawData instanceof DataSet || rawData instanceof DataView) {\n    data = rawData.get();\n  }\n  else {\n    throw new Error('Array, DataSet, or DataView expected');\n  }\n\n  if (data.length == 0) return;\n\n  this.style = style;\n\n  // unsubscribe from the dataTable\n  if (this.dataSet) {\n    this.dataSet.off('*', this._onChange);\n  }\n\n  this.dataSet = rawData;\n  this.dataTable = data;\n\n  // subscribe to changes in the dataset\n  var me = this;\n  this._onChange = function () {\n    graph3d.setData(me.dataSet);\n  };\n  this.dataSet.on('*', this._onChange);\n\n  // determine the location of x,y,z,value,filter columns\n  this.colX = 'x';\n  this.colY = 'y';\n  this.colZ = 'z';\n\n\n  var withBars = graph3d.hasBars(style);\n\n  // determine barWidth from data\n  if (withBars) {\n    if (graph3d.defaultXBarWidth !== undefined) {\n      this.xBarWidth = graph3d.defaultXBarWidth;\n    }\n    else {\n      this.xBarWidth = this.getSmallestDifference(data, this.colX) || 1;\n    }\n\n    if (graph3d.defaultYBarWidth !== undefined) {\n      this.yBarWidth = graph3d.defaultYBarWidth;\n    }\n    else {\n      this.yBarWidth = this.getSmallestDifference(data, this.colY) || 1;\n    }\n  }\n\n  // calculate minima and maxima\n  this._initializeRange(data, this.colX, graph3d, withBars);\n  this._initializeRange(data, this.colY, graph3d, withBars);\n  this._initializeRange(data, this.colZ, graph3d, false);\n\n  if (data[0].hasOwnProperty('style')) {\n    this.colValue = 'style';\n    var valueRange = this.getColumnRange(data, this.colValue);\n    this._setRangeDefaults(valueRange, graph3d.defaultValueMin, graph3d.defaultValueMax);\n    this.valueRange = valueRange;\n  }\n  else {\n    this.colValue = 'z';\n    this.valueRange = this.zRange;\n  }\n\n  // Initialize data filter if a filter column is provided\n  var table = this.getDataTable();\n  if (table[0].hasOwnProperty('filter')) {\n    if (this.dataFilter === undefined) {\n      this.dataFilter = new Filter(this, 'filter', graph3d);\n      this.dataFilter.setOnLoadCallback(function() { graph3d.redraw(); });\n    }\n  }\n\n\n  var dataPoints;\n  if (this.dataFilter) {\n    // apply filtering\n    dataPoints = this.dataFilter._getDataPoints();\n  }\n  else {\n    // no filtering. load all data\n    dataPoints = this._getDataPoints(this.getDataTable());\n  }\n  return dataPoints;\n};\n\n\n/**\n * Collect the range settings for the given data column.\n *\n * This internal method is intended to make the range \n * initalization more generic.\n *\n * TODO: if/when combined settings per axis defined, get rid of this.\n *\n * @private\n *\n * @param {'x'|'y'|'z'} column  The data column to process\n * @param {vis.Graph3d} graph3d Reference to the calling Graph3D instance;\n *                              required for access to settings\n * @returns {Object}\n */\nDataGroup.prototype._collectRangeSettings = function(column, graph3d) {\n  var index = ['x', 'y', 'z'].indexOf(column);\n\n  if (index == -1) {\n    throw new Error('Column \\'' + column + '\\' invalid');\n  }\n\n  var upper = column.toUpperCase();\n\n  return {\n    barWidth   : this[column + 'BarWidth'],\n    min        : graph3d['default' + upper + 'Min'],\n    max        : graph3d['default' + upper + 'Max'],\n    step       : graph3d['default' + upper + 'Step'],\n    range_label: column + 'Range', // Name of instance field to write to\n    step_label : column + 'Step'   // Name of instance field to write to\n  };\n};\n\n\n/**\n * Initializes the settings per given column.\n *\n * TODO: if/when combined settings per axis defined, rewrite this.\n *\n * @private\n *\n * @param {DataSet | DataView} data     The data containing the items for the Graph\n * @param {'x'|'y'|'z'}        column   The data column to process\n * @param {vis.Graph3d}        graph3d  Reference to the calling Graph3D instance;\n *                                      required for access to settings\n * @param {boolean}            withBars True if initializing for bar graph\n */\nDataGroup.prototype._initializeRange = function(data, column, graph3d, withBars) {\n  var NUMSTEPS = 5;\n  var settings = this._collectRangeSettings(column, graph3d);\n\n  var range = this.getColumnRange(data, column);\n  if (withBars && column != 'z') {          // Safeguard for 'z'; it doesn't have a bar width\n    range.expand(settings.barWidth / 2);\n  }\n\n  this._setRangeDefaults(range, settings.min, settings.max);\n  this[settings.range_label] = range;\n  this[settings.step_label ] = (settings.step !== undefined) ? settings.step : range.range()/NUMSTEPS;\n}\n\n\n/**\n * Creates a list with all the different values in the data for the given column.\n *\n * If no data passed, use the internal data of this instance.\n *\n * @param {'x'|'y'|'z'}                column The data column to process\n * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph\n *\n * @returns {Array} All distinct values in the given column data, sorted ascending.\n */\nDataGroup.prototype.getDistinctValues = function(column, data) {\n  if (data === undefined) {\n    data = this.dataTable;\n  }\n\n  var values = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var value = data[i][column] || 0;\n    if (values.indexOf(value) === -1) {\n      values.push(value);\n    }\n  }\n\n  return values.sort(function(a,b) { return a - b; });\n};\n\n\n/**\n * Determine the smallest difference between the values for given\n * column in the passed data set.\n *\n * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph\n * @param {'x'|'y'|'z'}                column The data column to process\n *\n * @returns {number|null} Smallest difference value or\n *                        null, if it can't be determined.\n */\nDataGroup.prototype.getSmallestDifference = function(data, column) {\n  var values = this.getDistinctValues(data, column);\n\n  // Get all the distinct diffs\n  // Array values is assumed to be sorted here\n  var smallest_diff = null;\n\n  for (var i = 1; i < values.length; i++) {\n    var diff = values[i] - values[i - 1];\n\n    if (smallest_diff == null || smallest_diff > diff ) {\n      smallest_diff = diff;\n    }\n  }\n\n  return smallest_diff;\n}\n\n\n/**\n * Get the absolute min/max values for the passed data column.\n *\n * @param {DataSet|DataView|undefined} data   The data containing the items for the Graph\n * @param {'x'|'y'|'z'}                column The data column to process\n *\n * @returns {Range} A Range instance with min/max members properly set.\n */\nDataGroup.prototype.getColumnRange = function(data, column) {\n  var range  = new Range();\n\n  // Adjust the range so that it covers all values in the passed data elements.\n  for (var i = 0; i < data.length; i++) {\n    var item = data[i][column];\n    range.adjust(item);\n  }\n\n  return range;\n};\n\n\n/**\n * Determines the number of rows in the current data.\n *\n * @returns {number}\n */\nDataGroup.prototype.getNumberOfRows = function() {\n  return this.dataTable.length;\n};\n\n\n/**\n * Set default values for range\n *\n * The default values override the range values, if defined.\n *\n * Because it's possible that only defaultMin or defaultMax is set, it's better\n * to pass in a range already set with the min/max set from the data. Otherwise,\n * it's quite hard to process the min/max properly.\n *\n * @param {vis.Range} range\n * @param {number} [defaultMin=range.min]\n * @param {number} [defaultMax=range.max]\n * @private\n */\nDataGroup.prototype._setRangeDefaults = function (range, defaultMin, defaultMax) {\n  if (defaultMin !== undefined) {\n    range.min = defaultMin;\n  }\n\n  if (defaultMax !== undefined) {\n    range.max = defaultMax;\n  }\n\n  // This is the original way that the default min/max values were adjusted.\n  // TODO: Perhaps it's better if an error is thrown if the values do not agree.\n  //       But this will change the behaviour.\n  if (range.max <= range.min) range.max = range.min + 1;\n};\n\n\nDataGroup.prototype.getDataTable = function() {\n  return this.dataTable;\n};\n\n\nDataGroup.prototype.getDataSet = function() {\n  return this.dataSet;\n};\n\n\n/**\n * Return all data values as a list of Point3d objects\n * @param {Array.<Object>} data\n * @returns {Array.<Object>}\n */\nDataGroup.prototype.getDataPoints = function(data) {\n  var dataPoints = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var point = new Point3d();\n    point.x = data[i][this.colX] || 0;\n    point.y = data[i][this.colY] || 0;\n    point.z = data[i][this.colZ] || 0;\n    point.data = data[i];\n    point.value = data[i][this.colValue] || 0;\n\n    var obj = {};\n    obj.point = point;\n    obj.bottom = new Point3d(point.x, point.y, this.zRange.min);\n    obj.trans = undefined;\n    obj.screen = undefined;\n\n    dataPoints.push(obj);\n  }\n\n  return dataPoints;\n};\n\n\n/**\n * Copy all values from the data table to a matrix.\n *\n * The provided values are supposed to form a grid of (x,y) positions.\n * @param {Array.<Object>} data\n * @returns {Array.<Object>}\n * @private\n */\nDataGroup.prototype.initDataAsMatrix = function(data) {\n  // TODO: store the created matrix dataPoints in the filters instead of\n  //       reloading each time.\n  var x, y, i, obj;\n\n  // create two lists with all present x and y values\n  var dataX = this.getDistinctValues(this.colX, data);\n  var dataY = this.getDistinctValues(this.colY, data);\n\n  var dataPoints = this.getDataPoints(data);\n\n  // create a grid, a 2d matrix, with all values.\n  var dataMatrix = [];   // temporary data matrix\n  for (i = 0; i < dataPoints.length; i++) {\n    obj = dataPoints[i];\n\n    // TODO: implement Array().indexOf() for Internet Explorer\n    var xIndex = dataX.indexOf(obj.point.x);\n    var yIndex = dataY.indexOf(obj.point.y);\n\n    if (dataMatrix[xIndex] === undefined) {\n      dataMatrix[xIndex] = [];\n    }\n\n    dataMatrix[xIndex][yIndex] = obj;\n  }\n\n  // fill in the pointers to the neighbors.\n  for (x = 0; x < dataMatrix.length; x++) {\n    for (y = 0; y < dataMatrix[x].length; y++) {\n      if (dataMatrix[x][y]) {\n        dataMatrix[x][y].pointRight = (x < dataMatrix.length-1) ? dataMatrix[x+1][y] : undefined;\n        dataMatrix[x][y].pointTop   = (y < dataMatrix[x].length-1) ? dataMatrix[x][y+1] : undefined;\n        dataMatrix[x][y].pointCross =\n          (x < dataMatrix.length-1 && y < dataMatrix[x].length-1) ?\n            dataMatrix[x+1][y+1] :\n            undefined;\n      }\n    }\n  }\n\n  return dataPoints;\n};\n\n\n/**\n * Return common information, if present\n *\n * @returns {string}\n */\nDataGroup.prototype.getInfo = function() {\n  var dataFilter = this.dataFilter;\n  if (!dataFilter) return undefined;\n\n  return dataFilter.getLabel() + ': ' + dataFilter.getSelectedValue();\n};\n\n\n/**\n * Reload the data\n */\nDataGroup.prototype.reload = function() {\n  if (this.dataTable) {\n    this.setData(this.dataTable);\n  }\n};\n\n\n/**\n * Filter the data based on the current filter\n *\n * @param   {Array} data\n * @returns {Array} dataPoints Array with point objects which can be drawn on\n *                             screen\n */\nDataGroup.prototype._getDataPoints = function (data) {\n  var dataPoints = [];\n\n  if (this.style === STYLE.GRID || this.style === STYLE.SURFACE) {\n    dataPoints = this.initDataAsMatrix(data);\n  }\n  else {  // 'dot', 'dot-line', etc.\n    dataPoints = this.getDataPoints(data);\n\n    if (this.style === STYLE.LINE) {\n      // Add next member points for line drawing\n      for (var i = 0; i < dataPoints.length; i++) {\n        if (i > 0) {\n          dataPoints[i - 1].pointNext = dataPoints[i];\n        }\n      }\n    }\n  }\n\n  return dataPoints;\n};\n\nexport default DataGroup;\n","import Emitter from \"component-emitter\";\nimport * as util from \"vis-util/esnext\";\nimport Point3d from \"./Point3d\";\nimport Point2d from \"./Point2d\";\nimport Slider from \"./Slider\";\nimport StepNumber from \"./StepNumber\";\nimport { STYLE, setCameraPosition, setDefaults, setOptions } from \"./Settings\";\nimport { VALIDATOR_PRINT_STYLE, Validator } from \"vis-util/esnext\";\nimport { allOptions } from \"./options.js\";\nimport DataGroup from \"./DataGroup\";\n\n\n/// enumerate the available styles\nGraph3d.STYLE = STYLE;\n\n\n/**\n * Following label is used in the settings to describe values which should be\n * determined by the code while running, from the current data and graph style.\n *\n * Using 'undefined' directly achieves the same thing, but this is more\n * descriptive by describing the intent.\n */\nvar autoByDefault = undefined;\n\n/**\n * Default values for option settings.\n *\n * These are the values used when a Graph3d instance is initialized without\n * custom settings.\n *\n * If a field is not in this list, a default value of 'autoByDefault' is assumed,\n * which is just an alias for 'undefined'.\n */\nGraph3d.DEFAULTS = {\n  width            : '400px',\n  height           : '400px',\n  filterLabel      : 'time',\n  legendLabel      : 'value',\n  xLabel           : 'x',\n  yLabel           : 'y',\n  zLabel           : 'z',\n  xValueLabel      : function(v) { return v; },\n  yValueLabel      : function(v) { return v; },\n  zValueLabel      : function(v) { return v; },\n  showXAxis        : true,\n  showYAxis        : true,\n  showZAxis        : true,\n  showGrayBottom   : false,\n  showGrid         : true,\n  showPerspective  : true,\n  showShadow       : false,\n  showSurfaceGrid  : true,\n  keepAspectRatio  : true,\n  rotateAxisLabels : true,\n  verticalRatio    : 0.5,    // 0.1 to 1.0, where 1.0 results in a 'cube'\n\n  dotSizeRatio      : 0.02,  // size of the dots as a fraction of the graph width\n  dotSizeMinFraction: 0.5,\t // size of min-value dot as a fraction of dotSizeRatio\t\n  dotSizeMaxFraction: 2.5,\t // size of max-value dot as a fraction of dotSizeRatio\t\n\n  showAnimationControls: autoByDefault,\n  animationInterval    : 1000, // milliseconds\n  animationPreload     : false,\n  animationAutoStart   : autoByDefault,\n\n  axisFontSize     : 14,\n  axisFontType     : 'arial',\n  axisColor        : '#4D4D4D',\n  gridColor        : '#D3D3D3',\n  xCenter          : '55%',\n  yCenter          : '50%',\n\n  style            : Graph3d.STYLE.DOT,\n  tooltip          : false,\n  tooltipDelay     : 300, // milliseconds\n\n  tooltipStyle     : {\n      content : {\n        padding       : '10px',\n        border        : '1px solid #4d4d4d',\n        color         : '#1a1a1a',\n        background    : 'rgba(255,255,255,0.7)',\n        borderRadius  : '2px',\n        boxShadow     : '5px 5px 10px rgba(128,128,128,0.5)'\n      },\n      line    : {\n        height        : '40px',\n        width         : '0',\n        borderLeft    : '1px solid #4d4d4d',\n        pointerEvents : 'none'\n      },\n      dot     : {\n        height        : '0',\n        width         : '0',\n        border        : '5px solid #4d4d4d',\n        borderRadius  : '5px',\n        pointerEvents : 'none'\n      }\n  },\n\n  dataColor        : {\n    fill       : '#7DC1FF',\n    stroke     : '#3267D2',\n    strokeWidth: 1 // px\n  },\n\n  surfaceColors: autoByDefault,\n  colormap : autoByDefault,\n\n  cameraPosition   : {\n     horizontal: 1.0,\n     vertical  : 0.5,\n     distance  : 1.7\n  },\n  \n  zoomable  : true,\n  ctrlToZoom: false,\n\n/*\n  The following fields are 'auto by default', see above.\n */\n  showLegend       : autoByDefault, // determined by graph style\n  backgroundColor  : autoByDefault,\n\n  xBarWidth : autoByDefault,\n  yBarWidth : autoByDefault,\n  valueMin  : autoByDefault,\n  valueMax  : autoByDefault,\n  xMin      : autoByDefault,\n  xMax      : autoByDefault,\n  xStep     : autoByDefault,\n  yMin      : autoByDefault,\n  yMax      : autoByDefault,\n  yStep     : autoByDefault,\n  zMin      : autoByDefault,\n  zMax      : autoByDefault,\n  zStep     : autoByDefault\n};\n\n\n// -----------------------------------------------------------------------------\n// Class Graph3d\n// -----------------------------------------------------------------------------\n\n\n/**\n * Graph3d displays data in 3d.\n *\n * Graph3d is developed in javascript as a Google Visualization Chart.\n *\n * @constructor Graph3d\n * @param {Element} container   The DOM element in which the Graph3d will\n *                              be created. Normally a div element.\n * @param {DataSet | DataView | Array} [data]\n * @param {Object} [options]\n */\nfunction Graph3d(container, data, options) {\n  if (!(this instanceof Graph3d)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // create variables and set default values\n  this.containerElement = container;\n\n  this.dataGroup = new DataGroup();\n  this.dataPoints = null; // The table with point objects\n\n  // create a frame and canvas\n  this.create();\n\n  setDefaults(Graph3d.DEFAULTS, this);\n\n  // the column indexes\n  this.colX = undefined;\n  this.colY = undefined;\n  this.colZ = undefined;\n  this.colValue = undefined;\n\n  // TODO: customize axis range\n\n  // apply options (also when undefined)\n  this.setOptions(options);\n\n  // apply data\n  this.setData(data);\n}\n\n// Extend Graph3d with an Emitter mixin\nEmitter(Graph3d.prototype);\n\n/**\n * Calculate the scaling values, dependent on the range in x, y, and z direction\n */\nGraph3d.prototype._setScale = function() {\n  this.scale = new Point3d(\n    1 / this.xRange.range(),\n    1 / this.yRange.range(),\n    1 / this.zRange.range()\n  );\n\n  // keep aspect ration between x and y scale if desired\n  if (this.keepAspectRatio) {\n    if (this.scale.x < this.scale.y) {\n      //noinspection JSSuspiciousNameCombination\n      this.scale.y = this.scale.x;\n    }\n    else {\n      //noinspection JSSuspiciousNameCombination\n      this.scale.x = this.scale.y;\n    }\n  }\n\n  // scale the vertical axis\n  this.scale.z *= this.verticalRatio;\n  // TODO: can this be automated? verticalRatio?\n\n  // determine scale for (optional) value\n  if (this.valueRange !== undefined) {\n    this.scale.value = 1 / this.valueRange.range();\n  }\n\n  // position the camera arm\n  var xCenter = this.xRange.center() * this.scale.x;\n  var yCenter = this.yRange.center() * this.scale.y;\n  var zCenter = this.zRange.center() * this.scale.z;\n  this.camera.setArmLocation(xCenter, yCenter, zCenter);\n};\n\n\n/**\n * Convert a 3D location to a 2D location on screen\n * Source: ttp://en.wikipedia.org/wiki/3D_projection\n *\n * @param   {Point3d} point3d  A 3D point with parameters x, y, z\n * @returns {Point2d} point2d  A 2D point with parameters x, y\n */\nGraph3d.prototype._convert3Dto2D = function(point3d) {\n  var translation = this._convertPointToTranslation(point3d);\n  return this._convertTranslationToScreen(translation);\n};\n\n/**\n * Convert a 3D location its translation seen from the camera\n * Source: http://en.wikipedia.org/wiki/3D_projection\n *\n * @param   {Point3d} point3d     A 3D point with parameters x, y, z\n * @returns {Point3d} translation A 3D point with parameters x, y, z This is\n *                                the translation of the point, seen from the\n *                                camera.\n */\nGraph3d.prototype._convertPointToTranslation = function(point3d) {\n  var cameraLocation = this.camera.getCameraLocation(),\n    cameraRotation = this.camera.getCameraRotation(),\n    ax = point3d.x * this.scale.x,\n    ay = point3d.y * this.scale.y,\n    az = point3d.z * this.scale.z,\n\n    cx = cameraLocation.x,\n    cy = cameraLocation.y,\n    cz = cameraLocation.z,\n\n  // calculate angles\n    sinTx = Math.sin(cameraRotation.x),\n    cosTx = Math.cos(cameraRotation.x),\n    sinTy = Math.sin(cameraRotation.y),\n    cosTy = Math.cos(cameraRotation.y),\n    sinTz = Math.sin(cameraRotation.z),\n    cosTz = Math.cos(cameraRotation.z),\n\n  // calculate translation\n    dx = cosTy * (sinTz * (ay - cy) + cosTz * (ax - cx)) - sinTy * (az - cz),\n    dy = sinTx * (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) + cosTx * (cosTz * (ay - cy) - sinTz * (ax-cx)),\n    dz = cosTx * (cosTy * (az - cz) + sinTy * (sinTz * (ay - cy) + cosTz * (ax - cx))) - sinTx * (cosTz * (ay - cy) - sinTz * (ax-cx));\n\n  return new Point3d(dx, dy, dz);\n};\n\n/**\n * Convert a translation point to a point on the screen\n *\n * @param   {Point3d} translation A 3D point with parameters x, y, z This is\n *                                the translation of the point, seen from the\n *                                camera.\n * @returns {Point2d} point2d     A 2D point with parameters x, y\n */\nGraph3d.prototype._convertTranslationToScreen = function(translation) {\n  var ex = this.eye.x,\n    ey = this.eye.y,\n    ez = this.eye.z,\n    dx = translation.x,\n    dy = translation.y,\n    dz = translation.z;\n\n  // calculate position on screen from translation\n  var bx;\n  var by;\n  if (this.showPerspective) {\n    bx = (dx - ex) * (ez / dz);\n    by = (dy - ey) * (ez / dz);\n  }\n  else {\n    bx = dx * -(ez / this.camera.getArmLength());\n    by = dy * -(ez / this.camera.getArmLength());\n  }\n\n  // shift and scale the point to the center of the screen\n  // use the width of the graph to scale both horizontally and vertically.\n  return new Point2d(\n    this.currentXCenter + bx * this.frame.canvas.clientWidth,\n    this.currentYCenter - by * this.frame.canvas.clientWidth);\n};\n\n\n/**\n * Calculate the translations and screen positions of all points\n *\n * @param {Array.<Point3d>} points\n * @private\n */\nGraph3d.prototype._calcTranslations = function(points) {\n  for (var i = 0; i < points.length; i++) {\n    var point    = points[i];\n    point.trans  = this._convertPointToTranslation(point.point);\n    point.screen = this._convertTranslationToScreen(point.trans);\n\n    // calculate the translation of the point at the bottom (needed for sorting)\n    var transBottom = this._convertPointToTranslation(point.bottom);\n    point.dist = this.showPerspective ? transBottom.length() : -transBottom.z;\n  }\n\n  // sort the points on depth of their (x,y) position (not on z)\n  var sortDepth = function (a, b) {\n    return b.dist - a.dist;\n  };\n  points.sort(sortDepth);\n};\n\n\n/**\n * Transfer min/max values to the Graph3d instance.\n */\nGraph3d.prototype._initializeRanges = function() {\n  // TODO: later on, all min/maxes of all datagroups will be combined here\n  var dg = this.dataGroup;\n  this.xRange = dg.xRange;\n  this.yRange = dg.yRange;\n  this.zRange = dg.zRange;\n  this.valueRange = dg.valueRange;\n\n  // Values currently needed but which need to be sorted out for\n  // the multiple graph case.\n  this.xStep = dg.xStep;\n  this.yStep = dg.yStep;\n  this.zStep = dg.zStep;\n  this.xBarWidth = dg.xBarWidth;\n  this.yBarWidth = dg.yBarWidth;\n  this.colX = dg.colX;\n  this.colY = dg.colY;\n  this.colZ = dg.colZ;\n  this.colValue = dg.colValue;\n\n  \n  // set the scale dependent on the ranges.\n  this._setScale();\n};\n\n\n/**\n * Return all data values as a list of Point3d objects\n *\n * @param {vis.DataSet} data\n * @returns {Array.<Object>}\n */\nGraph3d.prototype.getDataPoints = function(data) {\n  var dataPoints = [];\n\n  for (var i = 0; i < data.length; i++) {\n    var point = new Point3d();\n    point.x = data[i][this.colX] || 0;\n    point.y = data[i][this.colY] || 0;\n    point.z = data[i][this.colZ] || 0;\n    point.data = data[i];\n    point.value = data[i][this.colValue] || 0;\n\n    var obj = {};\n    obj.point = point;\n    obj.bottom = new Point3d(point.x, point.y, this.zRange.min);\n    obj.trans = undefined;\n    obj.screen = undefined;\n\n    dataPoints.push(obj);\n  }\n\n  return dataPoints;\n};\n\n\n/**\n * Filter the data based on the current filter\n *\n * @param   {Array} data\n * @returns {Array} dataPoints Array with point objects which can be drawn on\n *                             screen\n */\nGraph3d.prototype._getDataPoints = function (data) {\n  // TODO: store the created matrix dataPoints in the filters instead of\n  //       reloading each time.\n  var x, y, i, obj;\n\n  var dataPoints = [];\n\n  if (this.style === Graph3d.STYLE.GRID ||\n    this.style === Graph3d.STYLE.SURFACE) {\n    // copy all values from the data table to a matrix\n    // the provided values are supposed to form a grid of (x,y) positions\n\n    // create two lists with all present x and y values\n    var dataX = this.dataGroup.getDistinctValues(this.colX, data);\n    var dataY = this.dataGroup.getDistinctValues(this.colY, data);\n\n    dataPoints = this.getDataPoints(data);\n\n    // create a grid, a 2d matrix, with all values.\n    var dataMatrix = [];   // temporary data matrix\n    for (i = 0; i < dataPoints.length; i++) {\n      obj = dataPoints[i];\n\n      // TODO: implement Array().indexOf() for Internet Explorer\n      var xIndex = dataX.indexOf(obj.point.x);\n      var yIndex = dataY.indexOf(obj.point.y);\n\n      if (dataMatrix[xIndex] === undefined) {\n        dataMatrix[xIndex] = [];\n      }\n\n      dataMatrix[xIndex][yIndex] = obj;\n    }\n\n    // fill in the pointers to the neighbors.\n    for (x = 0; x < dataMatrix.length; x++) {\n      for (y = 0; y < dataMatrix[x].length; y++) {\n        if (dataMatrix[x][y]) {\n          dataMatrix[x][y].pointRight = (x < dataMatrix.length-1) ? dataMatrix[x+1][y] : undefined;\n          dataMatrix[x][y].pointTop   = (y < dataMatrix[x].length-1) ? dataMatrix[x][y+1] : undefined;\n          dataMatrix[x][y].pointCross =\n            (x < dataMatrix.length-1 && y < dataMatrix[x].length-1) ?\n              dataMatrix[x+1][y+1] :\n              undefined;\n        }\n      }\n    }\n  }\n  else {  // 'dot', 'dot-line', etc.\n    dataPoints = this.getDataPoints(data);\n\n    if (this.style === Graph3d.STYLE.LINE) {\n      // Add next member points for line drawing\n      for (i = 0; i < dataPoints.length; i++) {\n        if (i > 0) {\n          dataPoints[i - 1].pointNext = dataPoints[i];\n        }\n      }\n    }\n  }\n\n  return dataPoints;\n};\n\n\n/**\n * Create the main frame for the Graph3d.\n *\n * This function is executed once when a Graph3d object is created. The frame\n * contains a canvas, and this canvas contains all objects like the axis and\n * nodes.\n */\nGraph3d.prototype.create = function () {\n  // remove all elements from the container element.\n  while (this.containerElement.hasChildNodes()) {\n    this.containerElement.removeChild(this.containerElement.firstChild);\n  }\n\n  this.frame = document.createElement('div');\n  this.frame.style.position = 'relative';\n  this.frame.style.overflow = 'hidden';\n\n  // create the graph canvas (HTML canvas element)\n  this.frame.canvas = document.createElement( 'canvas' );\n  this.frame.canvas.style.position = 'relative';\n  this.frame.appendChild(this.frame.canvas);\n  //if (!this.frame.canvas.getContext) {\n  {\n    var noCanvas = document.createElement( 'DIV' );\n    noCanvas.style.color = 'red';\n    noCanvas.style.fontWeight =  'bold' ;\n    noCanvas.style.padding =  '10px';\n    noCanvas.innerHTML =  'Error: your browser does not support HTML canvas';\n    this.frame.canvas.appendChild(noCanvas);\n  }\n\n  this.frame.filter = document.createElement( 'div' );\n  this.frame.filter.style.position = 'absolute';\n  this.frame.filter.style.bottom = '0px';\n  this.frame.filter.style.left = '0px';\n  this.frame.filter.style.width = '100%';\n  this.frame.appendChild(this.frame.filter);\n\n  // add event listeners to handle moving and zooming the contents\n  var me = this;\n  var onmousedown = function (event) {me._onMouseDown(event);};\n  var ontouchstart = function (event) {me._onTouchStart(event);};\n  var onmousewheel = function (event) {me._onWheel(event);};\n  var ontooltip = function (event) {me._onTooltip(event);};\n  var onclick = function(event) {me._onClick(event);};\n  // TODO: these events are never cleaned up... can give a 'memory leakage'\n\n  util.addEventListener(this.frame.canvas, 'mousedown', onmousedown);\n  util.addEventListener(this.frame.canvas, 'touchstart', ontouchstart);\n  util.addEventListener(this.frame.canvas, 'mousewheel', onmousewheel);\n  util.addEventListener(this.frame.canvas, 'mousemove', ontooltip);\n  util.addEventListener(this.frame.canvas, 'click', onclick);\n\n  // add the new graph to the container element\n  this.containerElement.appendChild(this.frame);\n};\n\n\n/**\n * Set a new size for the graph\n *\n * @param {number} width\n * @param {number} height\n * @private\n */\nGraph3d.prototype._setSize = function(width, height) {\n  this.frame.style.width = width;\n  this.frame.style.height = height;\n\n  this._resizeCanvas();\n};\n\n\n/**\n * Resize the canvas to the current size of the frame\n */\nGraph3d.prototype._resizeCanvas = function() {\n  this.frame.canvas.style.width = '100%';\n  this.frame.canvas.style.height = '100%';\n\n  this.frame.canvas.width = this.frame.canvas.clientWidth;\n  this.frame.canvas.height = this.frame.canvas.clientHeight;\n\n  // adjust with for margin\n  this.frame.filter.style.width = (this.frame.canvas.clientWidth - 2 * 10) + 'px';\n};\n\n\n/**\n * Start playing the animation, if requested and filter present. Only applicable\n * when animation data is available.\n */\nGraph3d.prototype.animationStart = function() {\n  // start animation when option is true\n  if (!this.animationAutoStart || !this.dataGroup.dataFilter) return;\n\n  if (!this.frame.filter || !this.frame.filter.slider)\n    throw new Error('No animation available');\n\n  this.frame.filter.slider.play();\n};\n\n\n/**\n * Stop animation\n */\nGraph3d.prototype.animationStop = function() {\n  if (!this.frame.filter || !this.frame.filter.slider) return;\n\n  this.frame.filter.slider.stop();\n};\n\n\n/**\n * Resize the center position based on the current values in this.xCenter\n * and this.yCenter (which are strings with a percentage or a value\n * in pixels). The center positions are the variables this.currentXCenter\n * and this.currentYCenter\n */\nGraph3d.prototype._resizeCenter = function() {\n  // calculate the horizontal center position\n  if (this.xCenter.charAt(this.xCenter.length-1) === '%') {\n    this.currentXCenter =\n      parseFloat(this.xCenter) / 100 *\n        this.frame.canvas.clientWidth;\n  }\n  else {\n    this.currentXCenter = parseFloat(this.xCenter); // supposed to be in px\n  }\n\n  // calculate the vertical center position\n  if (this.yCenter.charAt(this.yCenter.length-1) === '%') {\n    this.currentYCenter =\n      parseFloat(this.yCenter) / 100 *\n        (this.frame.canvas.clientHeight - this.frame.filter.clientHeight);\n  }\n  else {\n    this.currentYCenter = parseFloat(this.yCenter); // supposed to be in px\n  }\n};\n\n\n\n/**\n * Retrieve the current camera rotation\n *\n * @returns {object} An object with parameters horizontal, vertical, and\n *                   distance\n */\nGraph3d.prototype.getCameraPosition = function() {\n  var pos = this.camera.getArmRotation();\n  pos.distance = this.camera.getArmLength();\n  return pos;\n};\n\n/**\n * Load data into the 3D Graph\n *\n * @param {vis.DataSet} data\n * @private\n */\nGraph3d.prototype._readData = function(data) {\n  // read the data\n  this.dataPoints = this.dataGroup.initializeData(this, data, this.style);\n\n  this._initializeRanges();\n  this._redrawFilter();\n};\n\n/**\n * Replace the dataset of the Graph3d\n *\n * @param {Array | DataSet | DataView} data\n */\nGraph3d.prototype.setData = function (data) {\n  if (data === undefined || data === null) return;\n\n  this._readData(data);\n  this.redraw();\n  this.animationStart();\n};\n\n/**\n * Update the options. Options will be merged with current options\n *\n * @param {Object} options\n */\nGraph3d.prototype.setOptions = function (options) {\n  if (options === undefined) return;\n\n  let errorFound = Validator.validate(options, allOptions);\n  if (errorFound === true) {\n    console.log(\n      \"%cErrors have been found in the supplied options object.\",\n      VALIDATOR_PRINT_STYLE\n    );\n  }\n\n  this.animationStop();\n\n  setOptions(options, this);\n  this.setPointDrawingMethod();\n  this._setSize(this.width, this.height);\n  this.setAxisLabelMethod();\n\n  this.setData(this.dataGroup.getDataTable());\n  this.animationStart();\n};\n\n\n/**\n * Determine which point drawing method to use for the current graph style.\n */\nGraph3d.prototype.setPointDrawingMethod = function() {\n  var method = undefined;\n\n  switch (this.style) {\n    case Graph3d.STYLE.BAR:\n      method = this._redrawBarGraphPoint;\n      break;\n    case Graph3d.STYLE.BARCOLOR:\n      method = this._redrawBarColorGraphPoint;\n      break;\n    case Graph3d.STYLE.BARSIZE:\n      method = this._redrawBarSizeGraphPoint;\n      break;\n    case Graph3d.STYLE.DOT:\n      method = this._redrawDotGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTLINE:\n      method = this._redrawDotLineGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTCOLOR:\n      method = this._redrawDotColorGraphPoint;\n      break;\n    case Graph3d.STYLE.DOTSIZE:\n      method = this._redrawDotSizeGraphPoint;\n      break;\n    case Graph3d.STYLE.SURFACE:\n      method = this._redrawSurfaceGraphPoint;\n      break;\n    case Graph3d.STYLE.GRID:\n      method = this._redrawGridGraphPoint;\n      break;\n    case Graph3d.STYLE.LINE:\n      method = this._redrawLineGraphPoint;\n      break;\n    default:\n      throw new Error('Can not determine point drawing method '\n                    + 'for graph style \\'' + this.style + '\\'');\n  }\n\n  this._pointDrawingMethod = method;\n};\n\n/**\n * Determine which functions to use to draw axis labels.\n */\nGraph3d.prototype.setAxisLabelMethod = function () {\n  if (this.rotateAxisLabels) {\n    this._drawAxisLabelX = this.drawAxisLabelXRotate;\n    this._drawAxisLabelY = this.drawAxisLabelYRotate;\n    this._drawAxisLabelZ = this.drawAxisLabelZRotate;\n  } else {\n    this._drawAxisLabelX = this.drawAxisLabelX;\n    this._drawAxisLabelY = this.drawAxisLabelY;\n    this._drawAxisLabelZ = this.drawAxisLabelZ;\n  }\n};\n\n/**\n * Redraw the Graph.\n */\nGraph3d.prototype.redraw = function() {\n  if (this.dataPoints === undefined) {\n    throw new Error('Graph data not initialized');\n  }\n\n  this._resizeCanvas();\n  this._resizeCenter();\n  this._redrawSlider();\n  this._redrawClear();\n  this._redrawAxis();\n\n  this._redrawDataGraph();\n\n  this._redrawInfo();\n  this._redrawLegend();\n};\n\n\n/**\n * Get drawing context without exposing canvas\n *\n * @returns {CanvasRenderingContext2D}\n * @private\n */\nGraph3d.prototype._getContext = function() {\n  var canvas = this.frame.canvas;\n  var ctx = canvas.getContext('2d');\n\n  ctx.lineJoin = 'round';\n  ctx.lineCap  = 'round';\n\n  return ctx;\n};\n\n\n/**\n * Clear the canvas before redrawing\n */\nGraph3d.prototype._redrawClear = function() {\n  var canvas = this.frame.canvas;\n  var ctx = canvas.getContext('2d');\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n};\n\n\nGraph3d.prototype._dotSize = function() {\n  return this.frame.clientWidth * this.dotSizeRatio;\n};\n\n\n/**\n * Get legend width\n *\n * @returns {*}\n * @private\n */\nGraph3d.prototype._getLegendWidth = function() {\n  var width;\n\n  if (this.style === Graph3d.STYLE.DOTSIZE) {\n    var dotSize = this._dotSize();\n    //width =  dotSize / 2 + dotSize * 2;\n    width =  dotSize * this.dotSizeMaxFraction;\n  } else if (this.style === Graph3d.STYLE.BARSIZE) {\n    width = this.xBarWidth ;\n  } else {\n    width = 20;\n  }\n  return width;\n};\n\n\n/**\n * Redraw the legend based on size, dot color, or surface height\n */\nGraph3d.prototype._redrawLegend = function() {\n\n  //Return without drawing anything, if no legend is specified\n  if (this.showLegend !== true) {\n    return;\n  }\n\n  // Do not draw legend when graph style does not support\n  if (this.style === Graph3d.STYLE.LINE\n   || this.style === Graph3d.STYLE.BARSIZE //TODO add legend support for BARSIZE\n  ){\n    return;\n  }\n\n  // Legend types - size and color. Determine if size legend.\n  var isSizeLegend = (this.style === Graph3d.STYLE.BARSIZE\n                   || this.style === Graph3d.STYLE.DOTSIZE) ;\n\n  // Legend is either tracking z values or style values. This flag if false means use z values.\n  var isValueLegend = (this.style === Graph3d.STYLE.DOTSIZE\n                  || this.style === Graph3d.STYLE.DOTCOLOR\n                  || this.style === Graph3d.STYLE.SURFACE\n                  || this.style === Graph3d.STYLE.BARCOLOR);\n\n  var height = Math.max(this.frame.clientHeight * 0.25, 100);\n  var top    = this.margin;\n  var width  = this._getLegendWidth() ; // px - overwritten by size legend\n  var right  = this.frame.clientWidth - this.margin;\n  var left   = right - width;\n  var bottom = top + height;\n\n  var ctx = this._getContext();\n  ctx.lineWidth = 1;\n  ctx.font = '14px arial'; // TODO: put in options\n\n  if (isSizeLegend === false) {\n    // draw the color bar\n    var ymin = 0;\n    var ymax = height; // Todo: make height customizable\n    var y;\n\n    for (y = ymin; y < ymax; y++) {\n      // Need (1 - x) because y runs from top to bottom:\n      const f = 1 - (y - ymin) / (ymax - ymin);\n      const color = this._colormap(f, 1);\n\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      ctx.moveTo(left, top + y);\n      ctx.lineTo(right, top + y);\n      ctx.stroke();\n    }\n    ctx.strokeStyle =  this.axisColor;\n    ctx.strokeRect(left, top, width, height);\n\n  } else {\n\n    // draw the size legend box\n    var  widthMin;\n    if (this.style === Graph3d.STYLE.DOTSIZE) {\n      // Get the proportion to max and min right\n      widthMin = width * (this.dotSizeMinFraction / this.dotSizeMaxFraction);\n    } else if (this.style === Graph3d.STYLE.BARSIZE) {\n      //widthMin = this.xBarWidth * 0.2 this is wrong - barwidth measures in terms of xvalues\n    }\n    ctx.strokeStyle =  this.axisColor;\n    ctx.fillStyle =  this.dataColor.fill;\n    ctx.beginPath();\n    ctx.moveTo(left, top);\n    ctx.lineTo(right, top);\n    ctx.lineTo(left + widthMin, bottom);\n    ctx.lineTo(left, bottom);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  }\n\n  // print value text along the legend edge\n  var gridLineLen = 5; // px\n\n  var legendMin = isValueLegend ? this.valueRange.min :  this.zRange.min;\n  var legendMax = isValueLegend ? this.valueRange.max :  this.zRange.max;\n  var step = new StepNumber(legendMin, legendMax, (legendMax-legendMin)/5, true);\n  step.start(true);\n\n  var from;\n  var to;\n  while (!step.end()) {\n    y = bottom - (step.getCurrent() - legendMin) / (legendMax - legendMin) * height;\n    from  = new Point2d(left - gridLineLen, y);\n    to    = new Point2d(left, y);\n    this._line(ctx, from, to);\n\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(step.getCurrent(), left - 2 * gridLineLen, y);\n\n    step.next();\n  }\n\n  ctx.textAlign = 'right';\n  ctx.textBaseline = 'top';\n  var label = this.legendLabel;\n  ctx.fillText(label, right, bottom + this.margin);\n};\n\n\n/**\n * Redraw the filter\n */\nGraph3d.prototype._redrawFilter = function() {\n  var dataFilter = this.dataGroup.dataFilter;\n  var filter = this.frame.filter;\n  filter.innerHTML = '';\n\n  if (!dataFilter) {\n    filter.slider = undefined;\n    return;\n  }\n\n  var options = {\n    'visible': this.showAnimationControls\n  };\n  var slider = new Slider(filter, options);\n  filter.slider = slider;\n\n  // TODO: css here is not nice here...\n  filter.style.padding = '10px';\n  //this.frame.filter.style.backgroundColor = '#EFEFEF';\n\n  slider.setValues(dataFilter.values);\n  slider.setPlayInterval(this.animationInterval);\n\n  // create an event handler\n  var me = this;\n  var onchange = function () {\n    var dataFilter = me.dataGroup.dataFilter;\n    var index = slider.getIndex();\n\n    dataFilter.selectValue(index);\n    me.dataPoints = dataFilter._getDataPoints();\n\n    me.redraw();\n  };\n\n  slider.setOnChangeCallback(onchange);\n};\n\n\n/**\n * Redraw the slider\n */\nGraph3d.prototype._redrawSlider = function() {\n  if ( this.frame.filter.slider !== undefined) {\n    this.frame.filter.slider.redraw();\n  }\n};\n\n\n/**\n * Redraw common information\n */\nGraph3d.prototype._redrawInfo = function() {\n  var info = this.dataGroup.getInfo();\n  if (info === undefined) return;\n\n  var ctx = this._getContext();\n\n  ctx.font = '14px arial'; // TODO: put in options\n  ctx.lineStyle = 'gray';\n  ctx.fillStyle = 'gray';\n  ctx.textAlign = 'left';\n  ctx.textBaseline = 'top';\n\n  var x = this.margin;\n  var y = this.margin;\n  ctx.fillText(info, x, y);\n};\n\n\n/**\n * Draw a line between 2d points 'from' and 'to'.\n *\n * If stroke style specified, set that as well.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point2d} from\n * @param {vis.Point2d} to\n * @param {string} [strokeStyle]\n * @private\n */\nGraph3d.prototype._line = function(ctx, from, to, strokeStyle) {\n  if (strokeStyle !== undefined) {\n    ctx.strokeStyle = strokeStyle;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(from.x, from.y);\n  ctx.lineTo(to.x  , to.y  );\n  ctx.stroke();\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelX = function(ctx, point3d, text, armAngle, yMargin) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  var point2d = this._convert3Dto2D(point3d);\n\n  if (Math.cos(armAngle * 2) > 0) {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    point2d.y += yMargin;\n  }\n  else if (Math.sin(armAngle * 2) < 0){\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n  }\n  else {\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n  }\n\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x, point2d.y);\n};\n\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelY = function(ctx, point3d, text, armAngle, yMargin) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  var point2d = this._convert3Dto2D(point3d);\n\n  if (Math.cos(armAngle * 2) < 0) {\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    point2d.y += yMargin;\n  }\n  else if (Math.sin(armAngle * 2) > 0){\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n  }\n  else {\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n  }\n\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x, point2d.y);\n};\n\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} [offset=0]\n */\nGraph3d.prototype.drawAxisLabelZ = function(ctx, point3d, text, offset) {\n  if (offset === undefined) {\n    offset = 0;\n  }\n\n  var point2d = this._convert3Dto2D(point3d);\n  ctx.textAlign = 'right';\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x - offset, point2d.y);\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelXRotate = function (ctx, point3d, text, armAngle, yMargin) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  var point2d = this._convert3Dto2D(point3d);\n  if (Math.cos(armAngle * 2) > 0) {\n    ctx.save();\n    ctx.translate( point2d.x, point2d.y);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, 0, 0);\n    ctx.restore();\n  } else if (Math.sin(armAngle * 2) < 0) {\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  } else {\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  }\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} armAngle\n * @param {number} [yMargin=0]\n */\nGraph3d.prototype.drawAxisLabelYRotate = function (ctx, point3d, text, armAngle, yMargin) {\n  if (yMargin === undefined) {\n    yMargin = 0;\n  }\n\n  var point2d = this._convert3Dto2D(point3d);\n  if (Math.cos(armAngle * 2) < 0 ) {\n    ctx.save();\n    ctx.translate( point2d.x, point2d.y);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, 0, 0);\n    ctx.restore();\n  } else if (Math.sin(armAngle * 2) > 0) {\n    ctx.textAlign = 'right';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  } else {\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = this.axisColor;\n    ctx.fillText(text, point2d.x, point2d.y);\n  }\n};\n\n/**\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point3d} point3d\n * @param {string} text\n * @param {number} [offset=0]\n */\nGraph3d.prototype.drawAxisLabelZRotate = function (ctx, point3d, text, offset) {\n  if (offset === undefined) {\n    offset = 0;\n  }\n\n  var point2d = this._convert3Dto2D(point3d);\n  ctx.textAlign = 'right';\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = this.axisColor;\n  ctx.fillText(text, point2d.x - offset, point2d.y);\n};\n\n/**\n\n\n/**\n * Draw a line between 2d points 'from' and 'to'.\n *\n * If stroke style specified, set that as well.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {vis.Point2d} from\n * @param {vis.Point2d} to\n * @param {string} [strokeStyle]\n * @private\n */\nGraph3d.prototype._line3d = function(ctx, from, to, strokeStyle) {\n  var from2d = this._convert3Dto2D(from);\n  var to2d   = this._convert3Dto2D(to);\n\n  this._line(ctx, from2d, to2d, strokeStyle);\n};\n\n\n/**\n * Redraw the axis\n */\nGraph3d.prototype._redrawAxis = function() {\n  var ctx = this._getContext(),\n    from, to, step, prettyStep,\n    text, xText, yText, zText,\n    offset, xOffset, yOffset;\n\n  // TODO: get the actual rendered style of the containerElement\n  //ctx.font = this.containerElement.style.font;\n  //ctx.font = 24 / this.camera.getArmLength() + 'px arial';\n  ctx.font = this.axisFontSize / this.camera.getArmLength() + 'px ' + this.axisFontType;\n\n  // calculate the length for the short grid lines\n  var gridLenX   = 0.025 / this.scale.x;\n  var gridLenY   = 0.025 / this.scale.y;\n  var textMargin = 5 / this.camera.getArmLength(); // px\n  var armAngle   = this.camera.getArmRotation().horizontal;\n  var armVector  = new Point2d(Math.cos(armAngle), Math.sin(armAngle));\n\n  var xRange = this.xRange;\n  var yRange = this.yRange;\n  var zRange = this.zRange;\n  var point3d;\n\n  // draw x-grid lines\n  ctx.lineWidth = 1;\n  prettyStep = (this.defaultXStep === undefined);\n  step = new StepNumber(xRange.min, xRange.max, this.xStep, prettyStep);\n  step.start(true);\n\n  while (!step.end()) {\n    var x = step.getCurrent();\n\n    if (this.showGrid) {\n      from = new Point3d(x, yRange.min, zRange.min);\n      to   = new Point3d(x, yRange.max, zRange.min);\n      this._line3d(ctx, from, to, this.gridColor);\n    }\n    else if (this.showXAxis) {\n      from = new Point3d(x, yRange.min, zRange.min);\n      to   = new Point3d(x, yRange.min+gridLenX, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n\n      from = new Point3d(x, yRange.max, zRange.min);\n      to   = new Point3d(x, yRange.max-gridLenX, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n    }\n\n    if (this.showXAxis) {\n      yText       = (armVector.x > 0) ? yRange.min : yRange.max;\n      point3d = new Point3d(x, yText, zRange.min);\n      let msg     = '  ' + this.xValueLabel(x) + '  ';\n      this._drawAxisLabelX.call(this, ctx, point3d, msg, armAngle, textMargin);\n    }\n\n    step.next();\n  }\n\n  // draw y-grid lines\n  ctx.lineWidth = 1;\n  prettyStep = (this.defaultYStep === undefined);\n  step = new StepNumber(yRange.min, yRange.max, this.yStep, prettyStep);\n  step.start(true);\n\n  while (!step.end()) {\n    var y = step.getCurrent();\n\n    if (this.showGrid) {\n      from = new Point3d(xRange.min, y, zRange.min);\n      to   = new Point3d(xRange.max, y, zRange.min);\n      this._line3d(ctx, from, to, this.gridColor);\n    }\n    else if (this.showYAxis){\n      from = new Point3d(xRange.min, y, zRange.min);\n      to   = new Point3d(xRange.min+gridLenY, y, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n\n      from = new Point3d(xRange.max, y, zRange.min);\n      to   = new Point3d(xRange.max-gridLenY, y, zRange.min);\n      this._line3d(ctx, from, to, this.axisColor);\n    }\n\n    if (this.showYAxis) {\n      xText   = (armVector.y > 0) ? xRange.min : xRange.max;\n      point3d = new Point3d(xText, y, zRange.min);\n      let msg = '  ' + this.yValueLabel(y) + '  ';\n      this._drawAxisLabelY.call(this, ctx, point3d, msg, armAngle, textMargin);\n    }\n\n    step.next();\n  }\n\n  // draw z-grid lines and axis\n  if (this.showZAxis) {\n    ctx.lineWidth = 1;\n    prettyStep = (this.defaultZStep === undefined);\n    step = new StepNumber(zRange.min, zRange.max, this.zStep, prettyStep);\n    step.start(true);\n\n    xText = (armVector.x > 0) ? xRange.min : xRange.max;\n    yText = (armVector.y < 0) ? yRange.min : yRange.max;\n\n    while (!step.end()) {\n      var z = step.getCurrent();\n\n      // TODO: make z-grid lines really 3d?\n      var from3d = new Point3d(xText, yText, z);\n      var from2d = this._convert3Dto2D(from3d);\n      to = new Point2d(from2d.x - textMargin, from2d.y);\n      this._line(ctx, from2d, to, this.axisColor);\n\n      let msg = this.zValueLabel(z) + ' ';\n      this._drawAxisLabelZ.call(this, ctx, from3d, msg, 5);\n\n      step.next();\n    }\n\n    ctx.lineWidth = 1;\n    from = new Point3d(xText, yText, zRange.min);\n    to   = new Point3d(xText, yText, zRange.max);\n    this._line3d(ctx, from, to, this.axisColor);\n  }\n\n  // draw x-axis\n  if (this.showXAxis) {\n    var xMin2d;\n    var xMax2d;\n    ctx.lineWidth = 1;\n\n    // line at yMin\n    xMin2d = new Point3d(xRange.min, yRange.min, zRange.min);\n    xMax2d = new Point3d(xRange.max, yRange.min, zRange.min);\n    this._line3d(ctx, xMin2d, xMax2d, this.axisColor);\n    // line at ymax\n    xMin2d = new Point3d(xRange.min, yRange.max, zRange.min);\n    xMax2d = new Point3d(xRange.max, yRange.max, zRange.min);\n    this._line3d(ctx, xMin2d, xMax2d, this.axisColor);\n  }\n\n  // draw y-axis\n  if (this.showYAxis) {\n    ctx.lineWidth = 1;\n    // line at xMin\n    from = new Point3d(xRange.min, yRange.min, zRange.min);\n    to   = new Point3d(xRange.min, yRange.max, zRange.min);\n    this._line3d(ctx, from, to, this.axisColor);\n    // line at xMax\n    from = new Point3d(xRange.max, yRange.min, zRange.min);\n    to   = new Point3d(xRange.max, yRange.max, zRange.min);\n    this._line3d(ctx, from, to, this.axisColor);\n  }\n\n  // draw x-label\n  var xLabel = this.xLabel;\n  if (xLabel.length > 0 && this.showXAxis) {\n    yOffset = 0.1 / this.scale.y;\n    xText   = (xRange.max + 3*xRange.min)/4;\n    yText   = (armVector.x > 0) ? yRange.min - yOffset: yRange.max + yOffset;\n    text    = new Point3d(xText, yText, zRange.min);\n    this.drawAxisLabelX(ctx, text, xLabel, armAngle);\n  }\n\n  // draw y-label\n  var yLabel = this.yLabel;\n  if (yLabel.length > 0 && this.showYAxis) {\n    xOffset = 0.1 / this.scale.x;\n    xText   = (armVector.y > 0) ? xRange.min - xOffset : xRange.max + xOffset;\n    yText   = (yRange.max + 3*yRange.min)/4;\n    text    = new Point3d(xText, yText, zRange.min);\n\n    this.drawAxisLabelY(ctx, text, yLabel, armAngle);\n  }\n\n  // draw z-label\n  var zLabel = this.zLabel;\n  if (zLabel.length > 0 && this.showZAxis) {\n    offset = 30;  // pixels.  // TODO: relate to the max width of the values on the z axis?\n    xText  = (armVector.x > 0) ? xRange.min : xRange.max;\n    yText  = (armVector.y < 0) ? yRange.min : yRange.max;\n    zText  = (zRange.max + 3*zRange.min)/4;\n    text   = new Point3d(xText, yText, zText);\n\n    this.drawAxisLabelZ(ctx, text, zLabel, offset);\n  }\n};\n\n\n/**\n *\n * @param {vis.Point3d} point\n * @returns {*}\n * @private\n */\nGraph3d.prototype._getStrokeWidth = function(point) {\n  if (point !== undefined) {\n    if (this.showPerspective) {\n      return 1 / -point.trans.z * this.dataColor.strokeWidth;\n    }\n    else {\n      return -(this.eye.z / this.camera.getArmLength()) * this.dataColor.strokeWidth;\n    }\n  }\n\n  return this.dataColor.strokeWidth;\n};\n\n\n// -----------------------------------------------------------------------------\n// Drawing primitives for the graphs\n// -----------------------------------------------------------------------------\n\n\n/**\n * Draw a bar element in the view with the given properties.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @param {number} xWidth\n * @param {number} yWidth\n * @param {string} color\n * @param {string} borderColor\n * @private\n */\nGraph3d.prototype._redrawBar = function(ctx, point, xWidth, yWidth, color, borderColor) {\n  var surface;\n\n  // calculate all corner points\n  var me = this;\n  var point3d = point.point;\n  var zMin = this.zRange.min;\n  var top = [\n    {point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, point3d.z)},\n    {point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, point3d.z)},\n    {point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, point3d.z)},\n    {point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, point3d.z)}\n  ];\n  var bottom = [\n    {point: new Point3d(point3d.x - xWidth, point3d.y - yWidth, zMin)},\n    {point: new Point3d(point3d.x + xWidth, point3d.y - yWidth, zMin)},\n    {point: new Point3d(point3d.x + xWidth, point3d.y + yWidth, zMin)},\n    {point: new Point3d(point3d.x - xWidth, point3d.y + yWidth, zMin)}\n  ];\n\n  // calculate screen location of the points\n  top.forEach(function (obj) {\n    obj.screen = me._convert3Dto2D(obj.point);\n  });\n  bottom.forEach(function (obj) {\n    obj.screen = me._convert3Dto2D(obj.point);\n  });\n\n  // create five sides, calculate both corner points and center points\n  var surfaces = [\n    {corners: top, center: Point3d.avg(bottom[0].point, bottom[2].point)},\n    {corners: [top[0], top[1], bottom[1], bottom[0]], center: Point3d.avg(bottom[1].point, bottom[0].point)},\n    {corners: [top[1], top[2], bottom[2], bottom[1]], center: Point3d.avg(bottom[2].point, bottom[1].point)},\n    {corners: [top[2], top[3], bottom[3], bottom[2]], center: Point3d.avg(bottom[3].point, bottom[2].point)},\n    {corners: [top[3], top[0], bottom[0], bottom[3]], center: Point3d.avg(bottom[0].point, bottom[3].point)}\n  ];\n  point.surfaces = surfaces;\n\n  // calculate the distance of each of the surface centers to the camera\n  for (let j = 0; j < surfaces.length; j++) {\n    surface = surfaces[j];\n    var transCenter = this._convertPointToTranslation(surface.center);\n    surface.dist = this.showPerspective ? transCenter.length() : -transCenter.z;\n    // TODO: this dept calculation doesn't work 100% of the cases due to perspective,\n    //     but the current solution is fast/simple and works in 99.9% of all cases\n    //     the issue is visible in example 14, with graph.setCameraPosition({horizontal: 2.97, vertical: 0.5, distance: 0.9})\n  }\n\n  // order the surfaces by their (translated) depth\n  surfaces.sort(function (a, b) {\n    var diff = b.dist - a.dist;\n    if (diff) return diff;\n\n    // if equal depth, sort the top surface last\n    if (a.corners === top) return 1;\n    if (b.corners === top) return -1;\n\n    // both are equal\n    return 0;\n  });\n\n  // draw the ordered surfaces\n  ctx.lineWidth = this._getStrokeWidth(point);\n  ctx.strokeStyle = borderColor;\n  ctx.fillStyle = color;\n  // NOTE: we start at j=2 instead of j=0 as we don't need to draw the two surfaces at the backside\n  for (let j = 2; j < surfaces.length; j++) {\n    surface = surfaces[j];\n    this._polygon(ctx, surface.corners);\n  }\n};\n\n\n/**\n * Draw a polygon using the passed points and fill it with the passed style and stroke.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Array.<vis.Point3d>} points      an array of points.\n * @param {string} [fillStyle] the fill style to set\n * @param {string} [strokeStyle] the stroke style to set\n */\nGraph3d.prototype._polygon = function(ctx, points, fillStyle, strokeStyle) {\n  if (points.length < 2) {\n    return;\n  }\n\n  if (fillStyle !== undefined) {\n    ctx.fillStyle   = fillStyle;\n  }\n  if (strokeStyle !== undefined) {\n    ctx.strokeStyle = strokeStyle;\n  }\n  ctx.beginPath();\n  ctx.moveTo(points[0].screen.x, points[0].screen.y);\n\n  for (var i = 1; i < points.length; ++i) {\n    var point = points[i];\n    ctx.lineTo(point.screen.x, point.screen.y);\n  }\n\n  ctx.closePath();\n  ctx.fill();\n  ctx.stroke(); // TODO: only draw stroke when strokeWidth > 0\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {object} point\n * @param {string} color\n * @param {string} borderColor\n * @param {number} [size=this._dotSize()]\n * @private\n */\nGraph3d.prototype._drawCircle = function(ctx, point, color, borderColor, size) {\n  var radius = this._calcRadius(point, size);\n\n  ctx.lineWidth   = this._getStrokeWidth(point);\n  ctx.strokeStyle = borderColor;\n  ctx.fillStyle   = color;\n  ctx.beginPath();\n  ctx.arc(point.screen.x, point.screen.y, radius, 0, Math.PI*2, true);\n  ctx.fill();\n  ctx.stroke();\n};\n\n\n/**\n * Determine the colors for the 'regular' graph styles.\n *\n * @param {object} point\n * @returns {{fill, border}}\n * @private\n */\nGraph3d.prototype._getColorsRegular = function(point) {\n  const f           = (point.point.value - this.valueRange.min) * this.scale.value;\n  const color       = this._colormap(f, 1);\n  const borderColor = this._colormap(f, 0.8);\n  return {\n    fill  : color,\n    border: borderColor\n  };\n};\n\n\n/**\n * Get the colors for the 'color' graph styles.\n * These styles are currently: 'bar-color' and 'dot-color'\n * Color may be set as a string representation of HTML color, like #ff00ff,\n * or calculated from a number, for example, distance from this point\n * The first option is useful when we have some pre-given legend, to which we have to adjust ourselves\n * The second option is useful when we are interested in automatically setting the color, from some value,\n * using some color scale\n * @param {object} point\n * @returns {{fill: *, border: *}}\n * @private\n */\nGraph3d.prototype._getColorsColor = function(point) {\n  // calculate the color based on the value\n  var color, borderColor, pointStyle;\n   if (point && point.point && point.point.data && point.point.data.style) {\n    pointStyle = point.point.data.style;\n  }\n  if (pointStyle && typeof pointStyle === 'object' &&\n      pointStyle.fill && pointStyle.stroke ) {\n    return {\n      fill: pointStyle.fill,\n      border: pointStyle.stroke\n    }\n  }\n\n  if (typeof point.point.value === \"string\") {\n    color = point.point.value;\n    borderColor = point.point.value;\n  }\n  else {\n    const f     = (point.point.value - this.valueRange.min) * this.scale.value;\n    color       = this._colormap(f, 1);\n    borderColor = this._colormap(f, 0.8);\n  }\n  return {\n    fill   : color,\n    border : borderColor\n  };\n};\n\n\n/**\n * Get the colors for the 'size' graph styles.\n * These styles are currently: 'bar-size' and 'dot-size'\n *\n * @returns {{fill: *, border: (string|colorOptions.stroke|{string, undefined}|string|colorOptions.stroke|{string}|*)}}\n * @private\n */\nGraph3d.prototype._getColorsSize = function() {\n  return {\n    fill   : this.dataColor.fill,\n    border : this.dataColor.stroke\n  };\n};\n\n\n/**\n * Determine the color corresponding to a given value on the color scale.\n *\n * @param {number} [x] the data value to be mapped running from 0 to 1\n * @param {number} [v] scale factor between 0 and 1 for the color brightness\n * @returns {string}\n * @private\n */\nGraph3d.prototype._colormap = function(x, v=1) {\n\n  let r, g, b, a;\n  const colormap = this.colormap;\n  if (Array.isArray(colormap)) {\n    const maxIndex = colormap.length - 1;\n    const startIndex = Math.max(Math.floor(x * maxIndex), 0);\n    const endIndex = Math.min(startIndex + 1, maxIndex);\n    const innerRatio = x * maxIndex - startIndex;\n    const min = colormap[startIndex];\n    const max = colormap[endIndex];\n    r = min.r + innerRatio*(max.r - min.r);\n    g = min.g + innerRatio*(max.g - min.g);\n    b = min.b + innerRatio*(max.b - min.b);\n  } else if (typeof colormap === 'function') {\n    ({r, g, b, a} = colormap(x));\n  } else {\n    const hue = (1 - x) * 240;\n    ({r, g, b} = util.HSVToRGB(hue/360, 1, 1));\n  }\n  if (typeof a === 'number' && !Number.isNaN(a)) {\n    return `RGBA(${Math.round(r*v)}, ${Math.round(g*v)}, ${Math.round(b*v)}, ${a})`;\n  } else {\n    return `RGB(${Math.round(r*v)}, ${Math.round(g*v)}, ${Math.round(b*v)})`;\n  }\n};\n\n\n/**\n * Determine the size of a point on-screen, as determined by the\n * distance to the camera.\n *\n * @param {Object} point\n * @param {number} [size=this._dotSize()] the size that needs to be translated to screen coordinates.\n *             optional; if not passed, use the default point size.\n * @returns {number}\n * @private\n */\nGraph3d.prototype._calcRadius = function(point, size) {\n  if (size === undefined) {\n    size = this._dotSize();\n  }\n\n  var radius;\n  if (this.showPerspective) {\n    radius = size / -point.trans.z;\n  }\n  else {\n    radius = size * -(this.eye.z / this.camera.getArmLength());\n  }\n  if (radius < 0) {\n    radius = 0;\n  }\n\n  return radius;\n};\n\n\n// -----------------------------------------------------------------------------\n// Methods for drawing points per graph style.\n// -----------------------------------------------------------------------------\n\n\n/**\n * Draw single datapoint for graph style 'bar'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawBarGraphPoint = function(ctx, point) {\n  var xWidth = this.xBarWidth / 2;\n  var yWidth = this.yBarWidth / 2;\n  var colors = this._getColorsRegular(point);\n\n  this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n};\n\n\n/**\n * Draw single datapoint for graph style 'bar-color'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawBarColorGraphPoint = function(ctx, point) {\n  var xWidth = this.xBarWidth / 2;\n  var yWidth = this.yBarWidth / 2;\n  var colors = this._getColorsColor(point);\n\n  this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n};\n\n\n/**\n * Draw single datapoint for graph style 'bar-size'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawBarSizeGraphPoint = function(ctx, point) {\n  // calculate size for the bar\n  var fraction = (point.point.value - this.valueRange.min) / this.valueRange.range();\n  var xWidth   = (this.xBarWidth / 2) * (fraction * 0.8 + 0.2);\n  var yWidth   = (this.yBarWidth / 2) * (fraction * 0.8 + 0.2);\n\n  var colors   = this._getColorsSize();\n\n  this._redrawBar(ctx, point, xWidth, yWidth, colors.fill, colors.border);\n};\n\n\n/**\n * Draw single datapoint for graph style 'dot'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawDotGraphPoint = function(ctx, point) {\n  var colors = this._getColorsRegular(point);\n\n  this._drawCircle(ctx, point, colors.fill, colors.border);\n};\n\n\n/**\n * Draw single datapoint for graph style 'dot-line'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawDotLineGraphPoint = function(ctx, point) {\n  // draw a vertical line from the XY-plane to the graph value\n  var from = this._convert3Dto2D(point.bottom);\n  ctx.lineWidth = 1;\n  this._line(ctx, from, point.screen, this.gridColor);\n\n  this._redrawDotGraphPoint(ctx, point);\n};\n\n\n/**\n * Draw single datapoint for graph style 'dot-color'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawDotColorGraphPoint = function(ctx, point) {\n  var colors = this._getColorsColor(point);\n\n  this._drawCircle(ctx, point, colors.fill, colors.border);\n};\n\n\n/**\n * Draw single datapoint for graph style 'dot-size'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawDotSizeGraphPoint = function(ctx, point) {\n  var dotSize   = this._dotSize();\n  var fraction  = (point.point.value - this.valueRange.min) / this.valueRange.range();\n\n  var sizeMin   = dotSize*this.dotSizeMinFraction;\n  var sizeRange = dotSize*this.dotSizeMaxFraction - sizeMin;\n  var size      = sizeMin + sizeRange*fraction;\n\n  var colors    = this._getColorsSize();\n\n  this._drawCircle(ctx, point, colors.fill, colors.border, size);\n};\n\n\n/**\n * Draw single datapoint for graph style 'surface'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawSurfaceGraphPoint = function(ctx, point) {\n  var right = point.pointRight;\n  var top   = point.pointTop;\n  var cross = point.pointCross;\n\n  if (point === undefined || right === undefined || top === undefined || cross === undefined) {\n    return;\n  }\n\n  var topSideVisible = true;\n  var fillStyle;\n  var strokeStyle;\n  var cosViewAngle;\n\n  if (this.showGrayBottom || this.showShadow) {\n    // calculate the cross product of the two vectors from center\n    // to left and right, in order to know whether we are looking at the\n    // bottom or at the top side. We can also use the cross product\n    // for calculating light intensity\n    var aDiff = Point3d.subtract(cross.trans, point.trans);\n    var bDiff = Point3d.subtract(top.trans, right.trans);\n    var surfaceNormal = Point3d.crossProduct(aDiff, bDiff);\n\n    if (this.showPerspective) {\n      let surfacePosition = Point3d.avg(\n        Point3d.avg(point.trans, cross.trans),\n        Point3d.avg(right.trans, top.trans));\n      // This corresponds to diffuse lighting with light source at (0, 0, 0).\n      // More generally, we would need `surfacePosition - lightPosition`:\n      cosViewAngle = -Point3d.dotProduct(\n        surfaceNormal.normalize(),\n        surfacePosition.normalize())\n    }\n    else {\n      cosViewAngle = surfaceNormal.z / surfaceNormal.length();\n    }\n    topSideVisible = cosViewAngle > 0;\n  }\n\n  if (topSideVisible || !this.showGrayBottom) {\n    const vAvg = (point.point.value + right.point.value + top.point.value + cross.point.value) / 4;\n    const ratio = (vAvg - this.valueRange.min) * this.scale.value;\n    // lighting factor. TODO: let user specify lighting model as function(?)\n    const v = this.showShadow ? (1 + cosViewAngle) / 2 : 1;\n    fillStyle = this._colormap(ratio, v);\n  }\n  else {\n    fillStyle = 'gray';\n  }\n\n  if (this.showSurfaceGrid) {\n    strokeStyle = this.axisColor; // TODO: should be customizable\n  }\n  else {\n    strokeStyle = fillStyle;\n  }\n\n  ctx.lineWidth = this._getStrokeWidth(point);\n  // TODO: only draw stroke when strokeWidth > 0\n\n  var points = [point, right, cross, top];\n  this._polygon(ctx, points, fillStyle, strokeStyle);\n};\n\n\n/**\n * Helper method for _redrawGridGraphPoint()\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} from\n * @param {Object} to\n * @private\n */\nGraph3d.prototype._drawGridLine = function(ctx, from, to) {\n  if (from === undefined || to === undefined) {\n     return;\n  }\n\n  const vAvg = (from.point.value + to.point.value) / 2;\n  const f    = (vAvg - this.valueRange.min) * this.scale.value;\n\n  ctx.lineWidth   = this._getStrokeWidth(from) * 2;\n  ctx.strokeStyle = this._colormap(f, 1);\n  this._line(ctx, from.screen, to.screen);\n};\n\n\n/**\n * Draw single datapoint for graph style 'Grid'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawGridGraphPoint = function(ctx, point) {\n  this._drawGridLine(ctx, point, point.pointRight);\n  this._drawGridLine(ctx, point, point.pointTop);\n};\n\n\n/**\n * Draw single datapoint for graph style 'line'.\n *\n * @param {CanvasRenderingContext2D} ctx\n * @param {Object} point\n * @private\n */\nGraph3d.prototype._redrawLineGraphPoint = function(ctx, point) {\n  if (point.pointNext === undefined) {\n    return;\n  }\n\n  ctx.lineWidth   = this._getStrokeWidth(point);\n  ctx.strokeStyle = this.dataColor.stroke;\n\n  this._line(ctx, point.screen, point.pointNext.screen);\n};\n\n\n/**\n * Draw all datapoints for currently selected graph style.\n *\n */\nGraph3d.prototype._redrawDataGraph = function() {\n  var ctx = this._getContext();\n  var i;\n\n  if (this.dataPoints === undefined || this.dataPoints.length <= 0)\n    return;  // TODO: throw exception?\n\n  this._calcTranslations(this.dataPoints);\n\n  for (i = 0; i < this.dataPoints.length; i++) {\n    var point = this.dataPoints[i];\n\n    // Using call() ensures that the correct context is used\n    this._pointDrawingMethod.call(this, ctx, point);\n  }\n};\n\n\n// -----------------------------------------------------------------------------\n// End methods for drawing points per graph style.\n// -----------------------------------------------------------------------------\n\n/**\n * Store startX, startY and startOffset for mouse operations\n *\n * @param {Event}     event     The event that occurred\n */\nGraph3d.prototype._storeMousePosition = function(event) {\n  // get mouse position (different code for IE and all other browsers)\n  this.startMouseX = getMouseX(event);\n  this.startMouseY = getMouseY(event);\n\n  this._startCameraOffset = this.camera.getOffset();\n};\n\n\n/**\n * Start a moving operation inside the provided parent element\n * @param {Event}     event     The event that occurred (required for\n *                  retrieving the  mouse position)\n */\nGraph3d.prototype._onMouseDown = function(event) {\n  event = event || window.event;\n\n  // check if mouse is still down (may be up when focus is lost for example\n  // in an iframe)\n  if (this.leftButtonDown) {\n    this._onMouseUp(event);\n  }\n\n  // only react on left mouse button down\n  this.leftButtonDown = event.which ? (event.which === 1) : (event.button === 1);\n  if (!this.leftButtonDown && !this.touchDown) return;\n\n  this._storeMousePosition(event);\n\n  this.startStart = new Date(this.start);\n  this.startEnd = new Date(this.end);\n  this.startArmRotation = this.camera.getArmRotation();\n\n  this.frame.style.cursor = 'move';\n\n  // add event listeners to handle moving the contents\n  // we store the function onmousemove and onmouseup in the graph, so we can\n  // remove the eventlisteners lateron in the function mouseUp()\n  var me = this;\n  this.onmousemove = function (event) {me._onMouseMove(event);};\n  this.onmouseup   = function (event) {me._onMouseUp(event);};\n  util.addEventListener(document, 'mousemove', me.onmousemove);\n  util.addEventListener(document, 'mouseup', me.onmouseup);\n  util.preventDefault(event);\n};\n\n\n/**\n * Perform moving operating.\n * This function activated from within the funcion Graph.mouseDown().\n * @param {Event}   event  Well, eehh, the event\n */\nGraph3d.prototype._onMouseMove = function (event) {\n  this.moving = true;\n  event = event || window.event;\n\n  // calculate change in mouse position\n  var diffX = parseFloat(getMouseX(event)) - this.startMouseX;\n  var diffY = parseFloat(getMouseY(event)) - this.startMouseY;\n\n  // move with ctrl or rotate by other\n  if (event && event.ctrlKey === true) {\n      // calculate change in mouse position\n      var scaleX = this.frame.clientWidth  * 0.5;\n      var scaleY = this.frame.clientHeight * 0.5;\n\n      var offXNew = (this._startCameraOffset.x || 0) - ((diffX / scaleX) * this.camera.armLength) * 0.8;\n      var offYNew = (this._startCameraOffset.y || 0) + ((diffY / scaleY) * this.camera.armLength) * 0.8;\n\n      this.camera.setOffset(offXNew, offYNew);\n      this._storeMousePosition(event);\n    } else {\n      var horizontalNew = this.startArmRotation.horizontal + diffX / 200;\n      var verticalNew   = this.startArmRotation.vertical   + diffY / 200;\n\n      var snapAngle = 4; // degrees\n      var snapValue = Math.sin(snapAngle / 360 * 2 * Math.PI);\n\n      // snap horizontally to nice angles at 0pi, 0.5pi, 1pi, 1.5pi, etc...\n      // the -0.001 is to take care that the vertical axis is always drawn at the left front corner\n      if (Math.abs(Math.sin(horizontalNew)) < snapValue) {\n          horizontalNew = Math.round(horizontalNew / Math.PI) * Math.PI - 0.001;\n      }\n      if (Math.abs(Math.cos(horizontalNew)) < snapValue) {\n          horizontalNew = (Math.round(horizontalNew / Math.PI - 0.5) + 0.5) * Math.PI - 0.001;\n      }\n\n      // snap vertically to nice angles\n      if (Math.abs(Math.sin(verticalNew)) < snapValue) {\n          verticalNew = Math.round(verticalNew / Math.PI) * Math.PI;\n      }\n      if (Math.abs(Math.cos(verticalNew)) < snapValue) {\n          verticalNew = (Math.round(verticalNew / Math.PI - 0.5) + 0.5) * Math.PI;\n      }\n      this.camera.setArmRotation(horizontalNew, verticalNew);\n  }\n\n  this.redraw();\n\n  // fire a cameraPositionChange event\n  var parameters = this.getCameraPosition();\n  this.emit('cameraPositionChange', parameters);\n\n  util.preventDefault(event);\n};\n\n\n/**\n * Stop moving operating.\n * This function activated from within the funcion Graph.mouseDown().\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onMouseUp = function (event) {\n  this.frame.style.cursor = 'auto';\n  this.leftButtonDown = false;\n\n  // remove event listeners here\n  util.removeEventListener(document, 'mousemove', this.onmousemove);\n  util.removeEventListener(document, 'mouseup',   this.onmouseup);\n  util.preventDefault(event);\n};\n\n/**\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onClick = function (event) {\n  // NOTE: onclick_callback is deprecated and may be removed in a future version.\n  if (!this.onclick_callback && !this.hasListeners('click'))\n    return;\n  if (!this.moving) {\n    var boundingRect = this.frame.getBoundingClientRect();\n    var mouseX = getMouseX(event) - boundingRect.left;\n    var mouseY = getMouseY(event) - boundingRect.top;\n    var dataPoint = this._dataPointFromXY(mouseX, mouseY);\n    if (dataPoint) {\n      if (this.onclick_callback)\n        this.onclick_callback(dataPoint.point.data);\n      this.emit('click', dataPoint.point.data);\n    }\n  }\n  else { // disable onclick callback, if it came immediately after rotate/pan\n    this.moving = false;\n  }\n  util.preventDefault(event);\n};\n\n/**\n * After having moved the mouse, a tooltip should pop up when the mouse is resting on a data point\n * @param {Event}  event   A mouse move event\n */\nGraph3d.prototype._onTooltip = function (event) {\n  var delay = this.tooltipDelay; // ms\n  var boundingRect = this.frame.getBoundingClientRect();\n  var mouseX = getMouseX(event) - boundingRect.left;\n  var mouseY = getMouseY(event) - boundingRect.top;\n\n  if (!this.showTooltip) {\n    return;\n  }\n\n  if (this.tooltipTimeout) {\n    clearTimeout(this.tooltipTimeout);\n  }\n\n  // (delayed) display of a tooltip only if no mouse button is down\n  if (this.leftButtonDown) {\n    this._hideTooltip();\n    return;\n  }\n\n  if (this.tooltip && this.tooltip.dataPoint) {\n    // tooltip is currently visible\n    var dataPoint = this._dataPointFromXY(mouseX, mouseY);\n    if (dataPoint !== this.tooltip.dataPoint) {\n      // datapoint changed\n      if (dataPoint) {\n        this._showTooltip(dataPoint);\n      }\n      else {\n        this._hideTooltip();\n      }\n    }\n  }\n  else {\n    // tooltip is currently not visible\n    var me = this;\n    this.tooltipTimeout = setTimeout(function () {\n      me.tooltipTimeout = null;\n\n      // show a tooltip if we have a data point\n      var dataPoint = me._dataPointFromXY(mouseX, mouseY);\n      if (dataPoint) {\n        me._showTooltip(dataPoint);\n      }\n    }, delay);\n  }\n};\n\n/**\n * Event handler for touchstart event on mobile devices\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onTouchStart = function(event) {\n  this.touchDown = true;\n\n  var me = this;\n  this.ontouchmove = function (event) {me._onTouchMove(event);};\n  this.ontouchend  = function (event) {me._onTouchEnd(event);};\n  util.addEventListener(document, 'touchmove', me.ontouchmove);\n  util.addEventListener(document, 'touchend', me.ontouchend);\n\n  this._onMouseDown(event);\n};\n\n/**\n * Event handler for touchmove event on mobile devices\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onTouchMove = function(event) {\n  this._onMouseMove(event);\n};\n\n/**\n * Event handler for touchend event on mobile devices\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onTouchEnd = function(event) {\n  this.touchDown = false;\n\n  util.removeEventListener(document, 'touchmove', this.ontouchmove);\n  util.removeEventListener(document, 'touchend',   this.ontouchend);\n\n  this._onMouseUp(event);\n};\n\n\n/**\n * Event handler for mouse wheel event, used to zoom the graph\n * Code from http://adomas.org/javascript-mouse-wheel/\n * @param {Event}  event   The event\n */\nGraph3d.prototype._onWheel = function(event) {\n  if (!event) /* For IE. */\n    event = window.event;\n  if (this.zoomable && (!this.ctrlToZoom || event.ctrlKey)) {\n\n    // retrieve delta\n    var delta = 0;\n    if (event.wheelDelta) { /* IE/Opera. */\n      delta = event.wheelDelta/120;\n    } else if (event.detail) { /* Mozilla case. */\n      // In Mozilla, sign of delta is different than in IE.\n      // Also, delta is multiple of 3.\n      delta = -event.detail/3;\n    }\n\n    // If delta is nonzero, handle it.\n    // Basically, delta is now positive if wheel was scrolled up,\n    // and negative, if wheel was scrolled down.\n    if (delta) {\n      var oldLength = this.camera.getArmLength();\n      var newLength = oldLength * (1 - delta / 10);\n\n      this.camera.setArmLength(newLength);\n      this.redraw();\n\n      this._hideTooltip();\n    }\n\n    // fire a cameraPositionChange event\n    var parameters = this.getCameraPosition();\n    this.emit('cameraPositionChange', parameters);\n\n    // Prevent default actions caused by mouse wheel.\n    // That might be ugly, but we handle scrolls somehow\n    // anyway, so don't bother here..\n    util.preventDefault(event);\n  }\n};\n\n/**\n * Test whether a point lies inside given 2D triangle\n *\n * @param   {vis.Point2d}   point\n * @param   {vis.Point2d[]} triangle\n * @returns {boolean}   true if given point lies inside or on the edge of the\n *                      triangle, false otherwise\n * @private\n */\nGraph3d.prototype._insideTriangle = function (point, triangle) {\n  var a = triangle[0],\n    b = triangle[1],\n    c = triangle[2];\n\n  /**\n   *\n   * @param {number} x\n   * @returns {number}\n   */\n  function sign (x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  var as = sign((b.x - a.x) * (point.y - a.y) - (b.y - a.y) * (point.x - a.x));\n  var bs = sign((c.x - b.x) * (point.y - b.y) - (c.y - b.y) * (point.x - b.x));\n  var cs = sign((a.x - c.x) * (point.y - c.y) - (a.y - c.y) * (point.x - c.x));\n\n  // each of the three signs must be either equal to each other or zero\n  return (as == 0 || bs == 0 || as == bs) &&\n    (bs == 0 || cs == 0 || bs == cs) &&\n    (as == 0 || cs == 0 || as == cs);\n};\n\n/**\n * Find a data point close to given screen position (x, y)\n *\n * @param   {number} x\n * @param   {number} y\n * @returns {Object | null} The closest data point or null if not close to any\n *                          data point\n * @private\n */\nGraph3d.prototype._dataPointFromXY = function (x, y) {\n  var i,\n    distMax = 100, // px\n    dataPoint = null,\n    closestDataPoint = null,\n    closestDist = null,\n    center = new Point2d(x, y);\n\n  if (this.style === Graph3d.STYLE.BAR ||\n    this.style === Graph3d.STYLE.BARCOLOR ||\n    this.style === Graph3d.STYLE.BARSIZE) {\n    // the data points are ordered from far away to closest\n    for (i = this.dataPoints.length - 1; i >= 0; i--) {\n      dataPoint = this.dataPoints[i];\n      var surfaces  = dataPoint.surfaces;\n      if (surfaces) {\n        for (var s = surfaces.length - 1; s >= 0; s--) {\n          // split each surface in two triangles, and see if the center point is inside one of these\n          var surface = surfaces[s];\n          var corners = surface.corners;\n          var triangle1 = [corners[0].screen, corners[1].screen, corners[2].screen];\n          var triangle2 = [corners[2].screen, corners[3].screen, corners[0].screen];\n          if (this._insideTriangle(center, triangle1) ||\n            this._insideTriangle(center, triangle2)) {\n            // return immediately at the first hit\n            return dataPoint;\n          }\n        }\n      }\n    }\n  }\n  else {\n    // find the closest data point, using distance to the center of the point on 2d screen\n    for (i = 0; i < this.dataPoints.length; i++) {\n      dataPoint = this.dataPoints[i];\n      var point = dataPoint.screen;\n      if (point) {\n        var distX = Math.abs(x - point.x);\n        var distY = Math.abs(y - point.y);\n        var dist  = Math.sqrt(distX * distX + distY * distY);\n\n        if ((closestDist === null || dist < closestDist) && dist < distMax) {\n          closestDist = dist;\n          closestDataPoint = dataPoint;\n        }\n      }\n    }\n  }\n\n\n  return closestDataPoint;\n};\n\n\n/**\n * Determine if the given style has bars\n *\n * @param   {number} style the style to check\n * @returns {boolean} true if bar style, false otherwise\n */\nGraph3d.prototype.hasBars = function(style) {\n  return style == Graph3d.STYLE.BAR      ||\n         style == Graph3d.STYLE.BARCOLOR ||\n         style == Graph3d.STYLE.BARSIZE;\n};\n\n\n/**\n * Display a tooltip for given data point\n * @param {Object} dataPoint\n * @private\n */\nGraph3d.prototype._showTooltip = function (dataPoint) {\n  var content, line, dot;\n\n  if (!this.tooltip) {\n    content = document.createElement('div');\n    Object.assign(content.style, {}, this.tooltipStyle.content);\n    content.style.position = 'absolute';\n    \n    line = document.createElement('div');\n    Object.assign(line.style, {}, this.tooltipStyle.line);\n    line.style.position = 'absolute';\n\n    dot = document.createElement('div');\n    Object.assign(dot.style, {}, this.tooltipStyle.dot);\n    dot.style.position = 'absolute';\n\n    this.tooltip = {\n      dataPoint: null,\n      dom: {\n        content: content,\n        line: line,\n        dot: dot\n      }\n    };\n  }\n  else {\n    content = this.tooltip.dom.content;\n    line  = this.tooltip.dom.line;\n    dot   = this.tooltip.dom.dot;\n  }\n\n  this._hideTooltip();\n\n  this.tooltip.dataPoint = dataPoint;\n  if (typeof this.showTooltip === 'function') {\n    content.innerHTML = this.showTooltip(dataPoint.point);\n  }\n  else {\n    content.innerHTML = '<table>' +\n      '<tr><td>' + this.xLabel + ':</td><td>' + dataPoint.point.x + '</td></tr>' +\n      '<tr><td>' + this.yLabel + ':</td><td>' + dataPoint.point.y + '</td></tr>' +\n      '<tr><td>' + this.zLabel + ':</td><td>' + dataPoint.point.z + '</td></tr>' +\n      '</table>';\n  }\n\n  content.style.left  = '0';\n  content.style.top   = '0';\n  this.frame.appendChild(content);\n  this.frame.appendChild(line);\n  this.frame.appendChild(dot);\n\n  // calculate sizes\n  var contentWidth  = content.offsetWidth;\n  var contentHeight   = content.offsetHeight;\n  var lineHeight    = line.offsetHeight;\n  var dotWidth    = dot.offsetWidth;\n  var dotHeight     = dot.offsetHeight;\n\n  var left = dataPoint.screen.x - contentWidth / 2;\n  left = Math.min(Math.max(left, 10), this.frame.clientWidth - 10 - contentWidth);\n\n  line.style.left   = dataPoint.screen.x + 'px';\n  line.style.top    = (dataPoint.screen.y - lineHeight) + 'px';\n  content.style.left  = left + 'px';\n  content.style.top   = (dataPoint.screen.y - lineHeight - contentHeight) + 'px';\n  dot.style.left    = (dataPoint.screen.x - dotWidth / 2) + 'px';\n  dot.style.top     = (dataPoint.screen.y - dotHeight / 2) + 'px';\n};\n\n/**\n * Hide the tooltip when displayed\n * @private\n */\nGraph3d.prototype._hideTooltip = function () {\n  if (this.tooltip) {\n    this.tooltip.dataPoint = null;\n\n    for (var prop in this.tooltip.dom) {\n      if (this.tooltip.dom.hasOwnProperty(prop)) {\n        var elem = this.tooltip.dom[prop];\n        if (elem && elem.parentNode) {\n          elem.parentNode.removeChild(elem);\n        }\n      }\n    }\n  }\n};\n\n/**--------------------------------------------------------------------------**/\n\n\n/**\n * Get the horizontal mouse position from a mouse event\n *\n * @param   {Event}  event\n * @returns {number} mouse x\n */\nfunction getMouseX (event) {\n  if ('clientX' in event) return event.clientX;\n  return event.targetTouches[0] && event.targetTouches[0].clientX || 0;\n}\n\n/**\n * Get the vertical mouse position from a mouse event\n *\n * @param   {Event}  event\n * @returns {number} mouse y\n */\nfunction getMouseY (event) {\n  if ('clientY' in event) return event.clientY;\n  return event.targetTouches[0] && event.targetTouches[0].clientY || 0;\n}\n\n\n// -----------------------------------------------------------------------------\n//  Public methods for specific settings\n// -----------------------------------------------------------------------------\n\n/**\n * Set the rotation and distance of the camera\n *\n * @param {Object}  pos            An object with the camera position\n * @param {number} [pos.horizontal] The horizontal rotation, between 0 and 2*PI.\n *                                 Optional, can be left undefined.\n * @param {number} [pos.vertical]  The vertical rotation, between 0 and 0.5*PI.\n *                                 if vertical=0.5*PI, the graph is shown from\n *                                 the top. Optional, can be left undefined.\n * @param {number} [pos.distance]  The (normalized) distance of the camera to the\n *                                 center of the graph, a value between 0.71 and\n *                                 5.0. Optional, can be left undefined.\n */\nGraph3d.prototype.setCameraPosition = function(pos) {\n  setCameraPosition(pos, this);\n  this.redraw();\n};\n\n\n/**\n * Set a new size for the graph\n *\n * @param {string} width  Width in pixels or percentage (for example '800px'\n *                        or '50%')\n * @param {string} height Height in pixels or percentage  (for example '400px'\n *                        or '30%')\n */\nGraph3d.prototype.setSize = function(width, height) {\n\tthis._setSize(width, height);\n\tthis.redraw();\n};\n\n// -----------------------------------------------------------------------------\n//  End public methods for specific settings\n// -----------------------------------------------------------------------------\n\n\nexport default Graph3d;\n"],"names":["Point3d","x","y","z","this","undefined","subtract","a","b","sub","add","sum","avg","scalarProduct","p","c","dotProduct","crossProduct","crossproduct","prototype","length","Math","sqrt","normalize","Point3d_1","Point2d_1","Slider","container","options","Error","visible","frame","document","createElement","style","width","position","appendChild","prev","type","value","play","next","bar","border","height","borderRadius","MozBorderRadius","backgroundColor","slide","margin","left","me","onmousedown","event","_onMouseDown","onclick","togglePlay","onChangeCallback","values","index","playTimeout","playInterval","playLoop","StepNumber","start","end","step","prettyStep","_start","_end","_step","precision","_current","setRange","getIndex","setIndex","playNext","Date","diff","interval","max","setTimeout","stop","clearInterval","setOnChangeCallback","callback","setPlayInterval","getPlayInterval","setPlayLoop","doLoop","onChange","redraw","top","clientHeight","offsetHeight","clientWidth","indexToLeft","setValues","get","which","button","startClientX","clientX","startSlideX","parseFloat","cursor","onmousemove","_onMouseMove","onmouseup","_onMouseUp","util","addEventListener","preventDefault","leftToIndex","round","removeEventListener","isNumeric","n","isNaN","isFinite","setStep","calculatePrettyStep","log10","log","LN10","step1","pow","step2","step5","abs","getCurrent","toPrecision","getStep","checkFirst","StepNumber_1","Camera","armLocation","armRotation","horizontal","vertical","armLength","cameraOffset","offsetMultiplier","cameraLocation","cameraRotation","PI","calculateCameraOrientation","setOffset","sign","mul","getOffset","setArmLocation","setArmRotation","getArmRotation","rot","setArmLength","getArmLength","getCameraLocation","getCameraRotation","sin","cos","xa","za","dx","dy","STYLE","BAR","BARCOLOR","BARSIZE","DOT","DOTLINE","DOTCOLOR","DOTSIZE","GRID","LINE","SURFACE","STYLENAME","dot","dot-line","dot-color","dot-size","line","grid","surface","bar-color","bar-size","OPTIONKEYS","PREFIXEDOPTIONKEYS","DEFAULTS","isEmpty","obj","prop","hasOwnProperty","prefixFieldName","prefix","fieldName","str","charAt","toUpperCase","slice","forceCopy","src","dst","fields","srcKey","i","safeCopy","setSpecialSettings","fill","stroke","strokeWidth","borderColor","borderWidth","borderStyle","setBackgroundColor","dataColor","setDataColor","styleNumber","styleName","number","getStyleNumberByName","valid","checkStyleNumber","setStyle","surfaceColors","console","warn","colormap","rgbColors","Array","isArray","parseColorArray","parseColorObject","hue","reverse","setSurfaceColor","setColormap","showLegend","isLegendGraphStyle","setShowLegend","setCameraPosition","cameraPosition","tooltip","showTooltip","onclick_callback","tooltipStyle","selectiveDeepExtend","map","colorCode","isValidHex","hexToRGB","hues","saturation","brightness","colorStops","hueStep","push","HSVToRGB","camPos","camera","distance","string","bool","object","colorOptions","__type__","allOptions","animationAutoStart","boolean","animationInterval","animationPreload","axisColor","axisFontSize","axisFontType","xBarWidth","yBarWidth","zoomable","ctrlToZoom","xCenter","yCenter","array","function","dotSizeMinFraction","dotSizeMaxFraction","dotSizeRatio","filterLabel","gridColor","keepAspectRatio","xLabel","yLabel","zLabel","legendLabel","xMin","yMin","zMin","xMax","yMax","zMax","showAnimationControls","showGrayBottom","showGrid","showPerspective","showShadow","showSurfaceGrid","showXAxis","showYAxis","showZAxis","rotateAxisLabels","xStep","yStep","zStep","tooltipDelay","content","color","background","boxShadow","padding","borderLeft","pointerEvents","xValueLabel","yValueLabel","zValueLabel","valueMax","valueMin","verticalRatio","Range","min","adjust","combine","range","expand","val","newMin","newMax","center","Range_1","Filter","dataGroup","column","graph","getDistinctValues","selectValue","dataPoints","loaded","onLoadCallback","loadInBackground","DataGroup","dataTable","isLoaded","getLoadedProgress","len","getLabel","getColumn","getSelectedValue","getValues","getValue","_getDataPoints","f","dataView","DataView","getDataSet","filter","item","setOnLoadCallback","progress","innerHTML","bottom","removeChild","initializeData","graph3d","rawData","data","DataSet","dataSet","off","_onChange","setData","on","colX","colY","colZ","withBars","hasBars","defaultXBarWidth","getSmallestDifference","defaultYBarWidth","_initializeRange","colValue","valueRange","getColumnRange","_setRangeDefaults","defaultValueMin","defaultValueMax","zRange","getDataTable","dataFilter","_collectRangeSettings","indexOf","upper","barWidth","range_label","step_label","settings","sort","smallest_diff","getNumberOfRows","defaultMin","defaultMax","getDataPoints","point","trans","screen","initDataAsMatrix","dataX","dataY","dataMatrix","xIndex","yIndex","pointRight","pointTop","pointCross","getInfo","reload","pointNext","Graph3d","SyntaxError","containerElement","create","eye","setDefaults","setOptions","getMouseX","targetTouches","getMouseY","clientY","v","Emitter","_setScale","scale","xRange","yRange","zCenter","_convert3Dto2D","point3d","translation","_convertPointToTranslation","_convertTranslationToScreen","ax","ay","az","cx","cy","cz","sinTx","cosTx","sinTy","cosTy","sinTz","cosTz","bx","by","ex","ey","ez","dz","Point2d","currentXCenter","canvas","currentYCenter","_calcTranslations","points","transBottom","dist","_initializeRanges","dg","hasChildNodes","firstChild","overflow","noCanvas","fontWeight","_onTouchStart","_onWheel","_onTooltip","_onClick","_setSize","_resizeCanvas","animationStart","slider","animationStop","_resizeCenter","getCameraPosition","pos","_readData","_redrawFilter","Validator","validate","VALIDATOR_PRINT_STYLE","setPointDrawingMethod","setAxisLabelMethod","method","_redrawBarGraphPoint","_redrawBarColorGraphPoint","_redrawBarSizeGraphPoint","_redrawDotGraphPoint","_redrawDotLineGraphPoint","_redrawDotColorGraphPoint","_redrawDotSizeGraphPoint","_redrawSurfaceGraphPoint","_redrawGridGraphPoint","_redrawLineGraphPoint","_pointDrawingMethod","_drawAxisLabelX","drawAxisLabelXRotate","_drawAxisLabelY","drawAxisLabelYRotate","_drawAxisLabelZ","drawAxisLabelZRotate","drawAxisLabelX","drawAxisLabelY","drawAxisLabelZ","_redrawSlider","_redrawClear","_redrawAxis","_redrawDataGraph","_redrawInfo","_redrawLegend","_getContext","ctx","getContext","lineJoin","lineCap","clearRect","_dotSize","_getLegendWidth","isSizeLegend","isValueLegend","right","lineWidth","font","ymax","_colormap","strokeStyle","beginPath","moveTo","lineTo","strokeRect","widthMin","fillStyle","closePath","from","to","legendMin","legendMax","_line","textAlign","textBaseline","fillText","label","info","lineStyle","text","armAngle","yMargin","point2d","offset","save","translate","rotate","restore","_line3d","from2d","to2d","xText","yText","zText","xOffset","yOffset","xMin2d","xMax2d","gridLenX","gridLenY","textMargin","armVector","defaultXStep","msg","call","defaultYStep","defaultZStep","from3d","_getStrokeWidth","_redrawBar","xWidth","yWidth","forEach","surfaces","corners","j","transCenter","_polygon","_drawCircle","size","radius","_calcRadius","arc","_getColorsRegular","_getColorsColor","pointStyle","_getColorsSize","r","g","maxIndex","startIndex","floor","endIndex","innerRatio","Number","colors","fraction","dotSize","sizeMin","cross","cosViewAngle","topSideVisible","aDiff","bDiff","surfaceNormal","surfacePosition","ratio","_drawGridLine","_storeMousePosition","startMouseX","startMouseY","_startCameraOffset","window","leftButtonDown","touchDown","startStart","startEnd","startArmRotation","moving","diffX","diffY","ctrlKey","scaleX","scaleY","offXNew","offYNew","horizontalNew","verticalNew","snapValue","parameters","emit","hasListeners","boundingRect","getBoundingClientRect","mouseX","mouseY","dataPoint","_dataPointFromXY","delay","tooltipTimeout","clearTimeout","_hideTooltip","_showTooltip","ontouchmove","_onTouchMove","ontouchend","_onTouchEnd","delta","wheelDelta","detail","newLength","_insideTriangle","triangle","as","bs","cs","closestDataPoint","closestDist","s","triangle1","triangle2","distX","distY","dom","Object","assign","contentWidth","offsetWidth","contentHeight","lineHeight","dotWidth","dotHeight","elem","parentNode","setSize"],"mappings":"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"}